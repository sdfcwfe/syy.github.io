<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>信号与系统001</title>
    <url>/syy.github.io/2025/09/08/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<!-- ![美女压图](/img/s002.jpg)

-->

<h1 id="信号与系统001"><a href="#信号与系统001" class="headerlink" title="信号与系统001"></a>信号与系统001</h1><p>目前还是测试的,具体内容往后再看看;</p>
<h2 id="卷积"><a href="#卷积" class="headerlink" title="卷积"></a>卷积</h2><h3 id="卷积的性质"><a href="#卷积的性质" class="headerlink" title="卷积的性质"></a>卷积的性质</h3><ul>
<li>1.分配律</li>
<li>2.交换律</li>
<li>3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积</li>
<li><ol start="4">
<li>( h(t+t_0) * x(t-t_0) &#x3D; h(t) * x(t) )</li>
</ol>
</li>
<li>LTI 系统稳定的充要条件是<br>$$ \int_{-\infty}^{+\infty} |h(t)| , dt &lt; +\infty $$<br>或<br>$$ \sum_{k&#x3D;-\infty}^{+\infty} |h[k]| &lt; +\infty $$</li>
</ul>
<h3 id="LTI系统的因果充要条件"><a href="#LTI系统的因果充要条件" class="headerlink" title="LTI系统的因果充要条件"></a>LTI系统的因果充要条件</h3><ul>
<li>h(t)&#x3D;0,当t&lt;0时,或者h[n]&#x3D;0,当n&lt;0时</li>
<li>因果的定义：输出 ( y(t) ) 在 ( t_0 ) 时刻的 ( y(t_0) )，只有 ( t \leq t_0 ) 时刻的 ( x(t) ) 决定。</li>
</ul>
<hr>
<blockquote>
<p>学习是一个持续的过程，每一小步都是进步。</p>
</blockquote>
]]></content>
      <tags>
        <tag>理论学习</tag>
        <tag>专业课</tag>
      </tags>
  </entry>
  <entry>
    <title>freertos</title>
    <url>/syy.github.io/2025/09/11/hello-world/</url>
    <content><![CDATA[<h1 id="freertos002"><a href="#freertos002" class="headerlink" title="freertos002"></a>freertos002</h1><p>测试中</p>
<h2 id="1-硬件初始化"><a href="#1-硬件初始化" class="headerlink" title="1.硬件初始化"></a>1.硬件初始化</h2><p>为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数</p>
<pre><code class="c">
/***********************************************************************
* @ 函数名  ： BSP_Init
* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面
* @ 参数    ：
* @ 返回值  ： 无
  *********************************************************************/
  static void BSP_Init(void)
  &#123;
  /*
    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15
    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，
    * 都统一用这个优先级分组，千万不要再分组，切忌。
      */
      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );

  /* LED 初始化 */
  LED_GPIO_Config();

  /* 串口初始化	*/
  USART_Config();

&#125;



</code></pre>
]]></content>
      <tags>
        <tag>理论学习</tag>
        <tag>嵌入式</tag>
      </tags>
  </entry>
</search>
