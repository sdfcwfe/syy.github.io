<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>freertos</title>
    <url>/syy.github.io/2025/09/11/hello-world/</url>
    <content><![CDATA[<h1>freertos002</h1>
<p>测试中</p>
<h2 id="1-硬件初始化">1.硬件初始化</h2>
<p>为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/***********************************************************************</span></span><br><span class="line"><span class="comment">* @ 函数名  ： BSP_Init</span></span><br><span class="line"><span class="comment">* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面</span></span><br><span class="line"><span class="comment">* @ 参数    ：</span></span><br><span class="line"><span class="comment">* @ 返回值  ： 无</span></span><br><span class="line"><span class="comment">  *********************************************************************/</span></span><br><span class="line">  <span class="type">static</span> <span class="type">void</span> <span class="title function_">BSP_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15</span></span><br><span class="line"><span class="comment">    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，</span></span><br><span class="line"><span class="comment">    * 都统一用这个优先级分组，千万不要再分组，切忌。</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* LED 初始化 */</span></span><br><span class="line">  LED_GPIO_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 串口初始化	*/</span></span><br><span class="line">  USART_Config();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>嵌入式</tag>
        <tag>理论学习</tag>
      </tags>
  </entry>
  <entry>
    <title>友链</title>
    <url>/syy.github.io/2025/09/13/friend-blog/</url>
    <content><![CDATA[<style>
.friend-link-row {
  display: flex;
  align-items: flex-start; /* 按内容顶部对齐 */
  gap: 20px; /* 友链项之间的间距 */
  margin-bottom: 20px;
}
.friend-link-item {
  flex: 1; /* 让每个友链项平分剩余空间 */
}
.friend-link-item img {
  max-width: 100px; /* 限制图片宽度，可根据需要调整 */
  height: auto;
}
</style>
<p>网络的经纬交织起奇妙的联结，每一次点击都是跨越屏幕的握手。<br>
以下这些名字与站点，是散落在赛博世界里的星辰，各自闪烁着独特的光芒 —— 感谢它们的存在，让这片数字疆域有了更温暖的温度。</p>
<div class="friend-link-row">
  <!-- 小海的图片超链接 -->
  <div class="friend-link-item">
    <a href="https://norubias.site">
      <img src="/syy.github.io/img/dd002.jpg" alt="小海">
    </a>
  </div>
  <!-- 柊野的图片超链接 -->
  <div class="friend-link-item">
    <a href="https://zhongye1.github.io/">
      <img src="/syy.github.io/img/dd001.jpg" alt="柊野">
    </a>
  </div>
</div>
<p><img src="/syy.github.io/img/s010.jpeg" alt=""></p>
]]></content>
  </entry>
  <entry>
    <title>前端学习</title>
    <url>/syy.github.io/2025/09/20/web-study/</url>
    <content><![CDATA[<blockquote>
<p>用代码为世界增添一抹独特的色彩，开启一扇通往无限可能的创意之门 。</p>
</blockquote>
<h2 id="html">HTML</h2>
<h3 id="基本介绍">基本介绍</h3>
<p>HTML是超文本标记语言<br>
超文本是标签,带尖括号是标签标记;</p>
<p>标签语言<br>
开头 需要加粗的文字 结尾</p>
<ul>
<li>标签成对出现,中间是内容</li>
<li>&lt;&gt;里面放英文字母</li>
<li>结束标签比开始多/<br>
例如: <strong>文字内容加粗</strong></li>
<li>单标签:<br>换行; <hr>水平线</li>
</ul>
<h3 id="基本骨架">基本骨架</h3>
<p><img src="/syy.github.io/source/img/st003.jpg" alt="1"></p>
<p>html:整个网络<br>
head;网络的头部,存放给浏览器看的代码,例如css<br>
body:网络的主体,存放用户看的代码,例如图片,文字<br>
title:网络标题</p>
<p>!快速生成基本骨架</p>
<h3 id="标签的关系">标签的关系</h3>
<p>明确代码的书写位置</p>
<ul>
<li>父子关系(嵌套关系)</li>
<li>兄弟关系(并列关系)</li>
</ul>
<h3 id="注释">注释</h3>
<p>对代码的解释说明,和md一样,</p>
<!-- 你 -->或者
<h3 id="标题标签">标题标签</h3>
<p>标题文字<br>
标签名字:h1-h6(双标签 ),h1一个网页只用一次</p>
<h3 id="段落标签">段落标签</h3>
<p>一段文字的标签<br>
标签<p>双标签</p>
<h3 id="换行和水平线标签">换行和水平线标签</h3>
<p>单标签:<br>换行; <hr> 水平线</p>
<h3 id="文本格式化标签">文本格式化标签</h3>
<p><img src="/syy.github.io/img/st004.jpg" alt=""><br>
strong-加粗; em-倾斜;ins-下划线;del-删除线; 工作中推荐<br>
b-加粗; l-倾斜;u-下划线;s-删除线;</p>
<h3 id="图像标签">图像标签</h3>
<p>&lt;img src=&quot;&quot;,四个属性&gt;<br>
网络插入图片;图片的url(位置和名字)<br>
alt=&quot;&quot;&quot;替换文本<br>
title=&quot;1&quot;提示文本<br>
width=&quot;1&quot;图片宽度<br>
height = ''图片的高度<br>
浏览器缩放默认是等比例的,除非两个都描述了</p>
<h3 id="路径">路径</h3>
<h4 id="相对路径">相对路径</h4>
<p>网页和文件分开,路径指的是查找文件时，从起点到终点经历的路线。<br>
1.当前文件:&quot;./xxx.jpg&quot;<br>
2.下一级文件:&quot;./xxx/xxx.jpg&quot;<br>
3.上一级文件:&quot;…/xxx.jpg&quot;</p>
<h4 id="绝对路径">绝对路径</h4>
<p>看电脑,window,linux等等;<br>
window从盘符出发<br>
例如:img src=“C\image\xxx.jpg”(&lt;和&gt;取消了)<br>
window默认,其他是/(window二者都可以,推荐这个)</p>
<p>在线网址也是绝对路径<br>
友情链接;跳到对应的网站</p>
<h3 id="超链接标签">超链接标签</h3>
<p>点击字或者图跳到其他页面;<br>
公式为<br>
<img src="/syy.github.io/img/st008.jpg" alt=""></p>
<p>如何是自己的链接,就换成相对路劲的值来换,<br>
跳转后原网址已经关闭;<br>
加属性,在href=“xx” target= “_blank”(同一个&lt;和.),打开新窗口,旧网址保留有<br>
开发的初期,不知道地址,href可以填#</p>
<h3 id="音频标签和视频标签">音频标签和视频标签</h3>
<p>1.音频<br>
公式;<br>
<img src="/syy.github.io/img/st009.jpg" alt=""><br>
2.视频<br>
公式:<br>
<img src="/syy.github.io/img/st010.jpg" alt=""><br>
muted control loop autoplay</p>
<h3 id="综合案例一">综合案例一;</h3>
<p>从上到下,先整体再局部;</p>
<p>补充:如果文字里面要插入标签<br>
打一个空格,a加herf…</p>
]]></content>
      <tags>
        <tag>理论学习</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>读原理图</title>
    <url>/syy.github.io/2025/09/16/study-for-schematic-diagram/</url>
    <content><![CDATA[<h1>硬件</h1>
<blockquote>
<p>study for schematic diagram</p>
</blockquote>
<h2 id="gpio">GPIO</h2>
<!-- 
    ![111](/syy.github.io/img/img.jpg) 
-->
<p>输出引脚{高点平:1;低电平:0;} ,用万用表读取高低电平;</p>
<p>怎么用:<br>
1.配置引脚功能;<br>
2.输出引脚,写值到某个寄存器里面去;</p>
<p>GPIO:通用输出外设<br>
<img src="/syy.github.io/img/st001.jpg" alt="三极管"><br>
上拉电阻:对于输入引脚,可以用输入电平;</p>
<h2 id="与门-或门等门电路">与门,或门等门电路</h2>
<p>非门: B != A;<br>
与门: B = A1 &amp; A2;<br>
或门: B = A1 || A2;<br>
或非门: $ B = \neg(A1 &amp; A2) $<br>
与非门: $ B = \neg(A1 \lor A2) $</p>
<h2 id="协议类">协议类</h2>
<h3 id="串口">串口</h3>
<p>(1)UART 串口<br>
2440开发板与pc机通信;一条线,输出引脚;<br>
TXD0的引脚接电平转换芯片,再出来到RST0接到串口座,串口线接到pc;<br>
(电平转换芯片:电压不一样,来转接)<br>
<img src="/syy.github.io/img/st002.jpg" alt="三极管"></p>
]]></content>
      <tags>
        <tag>嵌入式</tag>
        <tag>理论学习</tag>
      </tags>
  </entry>
  <entry>
    <title>信号与系统</title>
    <url>/syy.github.io/2025/09/08/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<!--
![美女压图](/img/002.jpg)
-->
<h1>信号与系统001</h1>
<p>目前还是测试的,具体内容往后再看看;</p>
<h2 id="卷积">卷积</h2>
<h3 id="卷积的性质">卷积的性质</h3>
<ul>
<li>1.分配律</li>
<li>2.交换律</li>
<li>3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积</li>
<li>4.<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲ h(t+t_0) * x(t…'>\( h(t+t_0) * x(t-t_0) = h(t) * x(t) \)</span></li>
<li>LTI 系统稳定的充要条件是<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>h</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{+\infty} |h(t)| \, dt &lt; +\infty 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.491512em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212310000000002em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span></span></p>
或<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mi mathvariant="normal">∣</mi><mi>h</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\sum_{k=-\infty}^{+\infty} |h[k]| &lt; +\infty 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.11878em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">h</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span></span></p>
</li>
</ul>
<h3 id="lti系统的因果充要条件">LTI系统的因果充要条件</h3>
<ul>
<li>h(t)=0,当t&lt;0时,或者h[n]=0,当n&lt;0时</li>
<li>因果的定义：输出 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲ y(t) \)'>\( y(t) \)</span>在 $( t_0 ) $时刻的 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲ y(t_0) \)'>\( y(t_0) \)</span>，只有$ ( t \leq t_0 ) $时刻的 $( x(t) ) $决定。</li>
</ul>
<hr>
<blockquote>
<p>学习是一个持续的过程，每一小步都是进步。</p>
</blockquote>
]]></content>
      <tags>
        <tag>理论学习</tag>
        <tag>专业课</tag>
      </tags>
  </entry>
  <entry>
    <title>贝塞尔曲线法</title>
    <url>/syy.github.io/2025/09/21/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E6%B3%95/</url>
    <content><![CDATA[<h1>贝塞尔曲线(植物大战僵尸的补充)</h1>
<p>局部路径规划算法</p>
<h2 id="贝塞尔算法思想">贝塞尔算法思想</h2>
<p>贝塞尔曲线是应用于二维图形应用程序的数学曲线，由一组称为控制点的向量来确定，给定的控制点按顺序连接构成控制多边形，<br>
贝塞尔曲线逼近这个多边形，进而通过调整控制点坐标改变曲线的形状。<br>
对于车辆系统,规划的轨迹应该满足以下准则:轨迹连续,轨迹曲率连续,轨迹容易被车辆跟踪,而且容易生成;<br>
给定n+1个数据点,p0-pn,生成一条曲线,使该曲线与这些点描述的形状相符;</p>
<h2 id="推导">推导</h2>
<h3 id="一次贝塞尔曲线">一次贝塞尔曲线</h3>
<p>设<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲P_0\)'>\(P_0\)</span>，<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲P_1\)'>\(P_1\)</span>两个控制点，t取值范围为<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲[0,1]\)'>\([0,1]\)</span>。<br>
直线<br>
则贝塞尔曲线生成点可以表达为：<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲p_1(t) = (1 - t…'>\(p_1(t) = (1 - t)P_0 + tP_1\)</span><br>
t可以为时间<br>
<img src="/syy.github.io/img/st005.jpg" alt="1"></p>
<h3 id="二阶">二阶</h3>
<p>设P0，P1，P2三个控制点，t取值范围为<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲[0,1]\)'>\([0,1]\)</span>。<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲P_0\)'>\(P_0\)</span>和<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲P_1\)'>\(P_1\)</span>构成一阶，<br>
<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲P_1\)'>\(P_1\)</span>和<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲P_2\)'>\(P_2\)</span>也构成一阶，即：<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲\begin{cases}'>\(\begin{cases}</span><br>
$p_{1,1}(t) = (1 - t)P_0 + tP_1 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span></span></span>p_{1,2}(t) = (1 - t)P_1 + tP_2<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>\end{cases})<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>在生成的两个一阶点基础上，可以生成二阶贝塞尔点：</mtext></mrow><annotation encoding="application/x-tex">在生成的两个一阶点基础上，可以生成二阶贝塞尔点：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">础</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">贝</span><span class="mord cjk_fallback">塞</span><span class="mord cjk_fallback">尔</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">：</span></span></span></span>(p_2(t) = (1 - t)p_{1,1} + tp_{1,2})$<br>
<img src="/syy.github.io/img/st006.jpg" alt="1"></p>
<h3 id="三阶">三阶</h3>
<p><img src="/syy.github.io/img/st007.jpg" alt="1"></p>
]]></content>
      <tags>
        <tag>理论学习</tag>
        <tag>路径规划</tag>
      </tags>
  </entry>
  <entry>
    <title>植物大战僵尸制作</title>
    <url>/syy.github.io/2025/09/12/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h1>植物大战僵尸</h1>
<p>目前打算先用cpp实现在电脑,再移植到stm32f407(lvgl,freertos)[还在实现中]</p>
<h2 id="cpp实现植物大战僵尸-1-2">cpp实现植物大战僵尸(1.2)</h2>
<p>目前已经实现僵尸</p>
<h3 id="视频">视频</h3>
<p><a href="https://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca">https://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca</a></p>
<h3 id="cpp实现思路">cpp实现思路</h3>
<ul>
<li>1.图片卡牌等静止的加载:依据计算出的图片位置的坐标,利用putimage或putimagePNG函数绘制实现;</li>
<li>2.植物生长动画图片实现:在updateGame函数中，根据时间间隔更新植物动画帧。每次更新时，植物的frameIndex递增，若超出图片序列范围则重置为 0 ;</li>
<li>3.阳光产生:通过rand()时间随机生成,在草坪的随机位置;其次,制作一个阳光数组,循环利用,而不是频繁生成并删除;</li>
<li>4.收集阳光:定义初始的阳光值,确定植物的else,怎么判断阳光位置:;(1.1)</li>
<li>5.僵尸实现:类似于阳光</li>
</ul>
<h3 id="cpp代码实现-1-0">cpp代码实现(1.0)</h3>
<p>cpp代码的实现思路是参考b站某up主的<br>
由于代码太长,不能完全展示出来,我上传在GitHub:<a href="https://github.com/sdfcwfe/-cpp-">https://github.com/sdfcwfe/-cpp-</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;graphics.h&gt;</span><span class="comment">//引用图形库头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;tools.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIN_WIDTH 900 <span class="comment">//游戏窗口宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIN_HEIGHT 600 <span class="comment">//游戏窗口高度</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> &#123;WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT&#125;;</span><br><span class="line"></span><br><span class="line">IMAGE imgBg; <span class="comment">//表示背景图片</span></span><br><span class="line">IMAGE imgBar; <span class="comment">//表示游戏中的任务栏</span></span><br><span class="line">IMAGE imgCards[ZHI_WU_COUNT];</span><br><span class="line">IMAGE* imgZhiWu[ZHI_WU_COUNT][<span class="number">20</span>]; <span class="comment">//表示植物图片</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> curX, curY; <span class="comment">//表示当前鼠标的坐标</span></span><br><span class="line"><span class="type">int</span> curZhiWu = <span class="number">0</span>; <span class="comment">//表示当前选中的植物 0未选中,1豌豆射手,2向日葵</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">zhiwu</span>&#123;</span><br><span class="line">	<span class="type">int</span> type; <span class="comment">//0:没有植物;1:有植物;</span></span><br><span class="line">	<span class="type">int</span> frameIndex; <span class="comment">//当前播放到第几帧</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">zhiwu</span> map[<span class="number">3</span>][<span class="number">9</span>]; <span class="comment">//表示游戏中的植物</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sunshineBall</span> &#123;</span><br><span class="line">	<span class="type">int</span> x, y; <span class="comment">//阳光的坐标 </span></span><br><span class="line">	<span class="type">int</span> frameIndex; <span class="comment">//当前播放到第几帧</span></span><br><span class="line">	<span class="type">int</span> destY; <span class="comment">//阳光掉落的目标y坐标</span></span><br><span class="line">	<span class="type">int</span> used; <span class="comment">//是否被使用 0:未使用 1:已使用 </span></span><br><span class="line">&#125;; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>嵌入式</tag>
        <tag>lvgl</tag>
        <tag>freertos</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
</search>
