<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>freertos</title>
    <url>/syy.github.io/2025/09/11/hello-world/</url>
    <content><![CDATA[<h1>freertos002</h1>
<p>测试中</p>
<h2 id="1-硬件初始化">1.硬件初始化</h2>
<p>为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/***********************************************************************</span></span><br><span class="line"><span class="comment">* @ 函数名  ： BSP_Init</span></span><br><span class="line"><span class="comment">* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面</span></span><br><span class="line"><span class="comment">* @ 参数    ：</span></span><br><span class="line"><span class="comment">* @ 返回值  ： 无</span></span><br><span class="line"><span class="comment">  *********************************************************************/</span></span><br><span class="line">  <span class="type">static</span> <span class="type">void</span> <span class="title function_">BSP_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15</span></span><br><span class="line"><span class="comment">    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，</span></span><br><span class="line"><span class="comment">    * 都统一用这个优先级分组，千万不要再分组，切忌。</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* LED 初始化 */</span></span><br><span class="line">  LED_GPIO_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 串口初始化	*/</span></span><br><span class="line">  USART_Config();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>嵌入式</tag>
        <tag>理论学习</tag>
      </tags>
  </entry>
  <entry>
    <title>信号与系统</title>
    <url>/syy.github.io/2025/09/08/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<!--
![美女压图](/img/002.jpg)
-->
<h1>信号与系统001</h1>
<p>目前还是测试的,具体内容往后再看看;</p>
<h2 id="卷积">卷积</h2>
<h3 id="卷积的性质">卷积的性质</h3>
<ul>
<li>1.分配律</li>
<li>2.交换律</li>
<li>3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积</li>
<li>4.<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲ h(t+t_0) * x(t…'>\( h(t+t_0) * x(t-t_0) = h(t) * x(t) \)</span></li>
<li>LTI 系统稳定的充要条件是<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>h</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{+\infty} |h(t)| \, dt &lt; +\infty 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.491512em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212310000000002em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span></span></p>
或<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mi mathvariant="normal">∣</mi><mi>h</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\sum_{k=-\infty}^{+\infty} |h[k]| &lt; +\infty 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.11878em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">h</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span></span></p>
</li>
</ul>
<h3 id="lti系统的因果充要条件">LTI系统的因果充要条件</h3>
<ul>
<li>h(t)=0,当t&lt;0时,或者h[n]=0,当n&lt;0时</li>
<li>因果的定义：输出 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲ y(t) \)'>\( y(t) \)</span>在 $( t_0 ) $时刻的 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\(&#039; in math mode at position 1: \̲(̲ y(t_0) \)'>\( y(t_0) \)</span>，只有$ ( t \leq t_0 ) $时刻的 $( x(t) ) $决定。</li>
</ul>
<hr>
<blockquote>
<p>学习是一个持续的过程，每一小步都是进步。</p>
</blockquote>
]]></content>
      <tags>
        <tag>理论学习</tag>
        <tag>专业课</tag>
      </tags>
  </entry>
  <entry>
    <title>植物大战僵尸制作</title>
    <url>/syy.github.io/2025/09/12/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h1>植物大战僵尸</h1>
<p>目前打算先用cpp实现在电脑,再移植到stm32f407(lvgl,freertos)[还在实现中]</p>
<h2 id="cpp实现植物大战僵尸">cpp实现植物大战僵尸</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.创建新的项目</span></span><br><span class="line"><span class="comment">2.添加图形库</span></span><br><span class="line"><span class="comment">3.实现最开始的游戏场景</span></span><br><span class="line"><span class="comment">4.实现游戏顶部的工具栏</span></span><br><span class="line"><span class="comment">5.实现工具栏的卡牌</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS  <span class="comment">// 必须放在最顶部，否则可能不生效</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;graphics.h&gt;</span><span class="comment">//引用图形库头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;tools.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIN_WIDTH 900 <span class="comment">//游戏窗口宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIN_HEIGHT 600 <span class="comment">//游戏窗口高度</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> &#123;WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT&#125;;</span><br><span class="line"></span><br><span class="line">IMAGE imgBg; <span class="comment">//表示背景图片</span></span><br><span class="line">IMAGE imgBar; <span class="comment">//表示游戏中的任务栏</span></span><br><span class="line">IMAGE imgCards[ZHI_WU_COUNT];</span><br><span class="line">IMAGE* imgZhiWu[ZHI_WU_COUNT][<span class="number">20</span>]; <span class="comment">//表示植物图片</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> curX, curY; <span class="comment">//表示当前鼠标的坐标</span></span><br><span class="line"><span class="type">int</span> curZhiWu = <span class="number">0</span>; <span class="comment">//表示当前选中的植物 0未选中,1豌豆射手,2向日葵</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">zhiwu</span>&#123;</span><br><span class="line"><span class="type">int</span> type; <span class="comment">//0:没有植物;1:有植物;</span></span><br><span class="line"><span class="type">int</span> frameIndex; <span class="comment">//当前播放到第几帧</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">zhiwu</span> map[<span class="number">3</span>][<span class="number">9</span>]; <span class="comment">//表示游戏中的植物</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sunshineBall</span> &#123;</span><br><span class="line"><span class="type">int</span> x, y; <span class="comment">//阳光的坐标</span></span><br><span class="line"><span class="type">int</span> frameIndex; <span class="comment">//当前播放到第几帧</span></span><br><span class="line"><span class="type">int</span> destY; <span class="comment">//阳光掉落的目标y坐标</span></span><br><span class="line"><span class="type">int</span> used; <span class="comment">//是否被使用 0:未使用 1:已使用</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//10个阳光球(循环出现)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sunshineBall</span> balls[<span class="number">10</span>];</span><br><span class="line">IMAGE imgSunshineBall[<span class="number">29</span>]; <span class="comment">//阳光图片</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">fileExist</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* name)</span> </span>&#123;</span><br><span class="line">FILE* fp = <span class="built_in">fopen</span>(name, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(fp == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">fclose</span>(fp);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">gameInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//加载游戏背景</span></span><br><span class="line"><span class="built_in">loadimage</span>(&amp;imgBg, _T(<span class="string">&quot;res/bg.jpg&quot;</span>)); <span class="comment">//加载背景图片</span></span><br><span class="line"><span class="built_in">loadimage</span>(&amp;imgBar, _T(<span class="string">&quot;res/bar5.png&quot;</span>)); <span class="comment">//加载矩形条图片</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(imgZhiWu, <span class="number">0</span>, <span class="built_in">sizeof</span>(imgZhiWu)); <span class="comment">//将植物图片数组清零</span></span><br><span class="line">	<span class="built_in">memset</span>(map, <span class="number">0</span>, <span class="built_in">sizeof</span>(map)); <span class="comment">//将植物地图清零</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//初始化植物卡牌</span></span><br><span class="line">	<span class="type">char</span> name[<span class="number">64</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i =  <span class="number">0</span>;i &lt; ZHI_WU_COUNT; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//生成植物卡牌的文件名</span></span><br><span class="line">		<span class="type">wchar_t</span> wname[<span class="number">64</span>];</span><br><span class="line">		<span class="comment">// 2. 生成窄字符路径（原逻辑不变）</span></span><br><span class="line">		<span class="built_in">sprintf_s</span>(name, <span class="built_in">sizeof</span>(name), <span class="string">&quot;res/Cards/card_%d.png&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">		<span class="comment">// 3. 转换窄字符到宽字符（需要包含 Windows.h）</span></span><br><span class="line">		<span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, name, <span class="number">-1</span>, wname, <span class="number">64</span>);</span><br><span class="line">		<span class="comment">// 4. 传入宽字符路径</span></span><br><span class="line">		<span class="built_in">loadimage</span>(&amp;imgCards[i], wname);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">20</span>; j++)&#123;</span><br><span class="line">			<span class="built_in">sprintf_s</span>(name, <span class="built_in">sizeof</span>(name), <span class="string">&quot;res/ZhiWu/%d/%d.png&quot;</span>, i , j<span class="number">+1</span>);</span><br><span class="line">			<span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, name, <span class="number">-1</span>, wname, <span class="number">64</span>);</span><br><span class="line">			<span class="comment">//imgZhiWu[i][j] = new IMAGE;</span></span><br><span class="line">			<span class="comment">//判断文件是否存在</span></span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">fileExist</span>(name)) &#123;</span><br><span class="line">				imgZhiWu[i][j] = <span class="keyword">new</span> IMAGE;</span><br><span class="line">				<span class="built_in">loadimage</span>(imgZhiWu[i][j], wname);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				imgZhiWu[i][j] = <span class="literal">NULL</span>;</span><br><span class="line">				<span class="keyword">break</span>; <span class="comment">//文件不存在，跳出循环</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(balls, <span class="number">0</span>, <span class="built_in">sizeof</span>(balls)); <span class="comment">//将阳光球数组清零</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建游戏窗口:</span></span><br><span class="line">	<span class="built_in">initgraph</span>(WIN_WIDTH, WIN_HEIGHT, <span class="number">1</span>); <span class="comment">//创建800*600的窗口，显示控制台，禁止关闭和最小化</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//关闭图形窗口</span></span><br><span class="line">	<span class="comment">//closegraph();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateWindow</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">BeginBatchDraw</span>(); <span class="comment">//开始批量绘图，防止闪烁(双缓冲</span></span><br><span class="line"><span class="comment">//绘制背景图片</span></span><br><span class="line"><span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;imgBg); <span class="comment">//将背景图片绘制到窗口的(0,0)位置</span></span><br><span class="line"><span class="built_in">putimagePNG</span>(<span class="number">250</span>, <span class="number">0</span>, &amp;imgBar); <span class="comment">//将任务栏图片绘制到窗口底部</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ZHI_WU_COUNT; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x = <span class="number">338</span> + i * <span class="number">65</span>; <span class="comment">//计算每张卡牌的x坐标</span></span><br><span class="line">		<span class="type">int</span> y = <span class="number">6</span>; <span class="comment">//卡牌的y坐标固定为6</span></span><br><span class="line">		<span class="built_in">putimage</span>(x, y, &amp;imgCards[i]); <span class="comment">//将植物卡牌绘制到任务栏上</span></span><br><span class="line">		<span class="comment">//putimagePNG(50 + i * 80, 10, &amp;imgCards[i]); //将植物卡牌绘制到任务栏上</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//渲染拖动窗口</span></span><br><span class="line">	<span class="keyword">if</span> (curZhiWu &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		IMAGE* img = imgZhiWu[curZhiWu - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">		<span class="built_in">putimagePNG</span>(curX - img-&gt;<span class="built_in">getwidth</span>()/<span class="number">2</span>, curY -img-&gt;<span class="built_in">getheight</span>()/<span class="number">2</span>, img);</span><br><span class="line">		<span class="comment">//putimagePNG(curX , curY , img);</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (map[i][j].type &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="type">int</span> x = <span class="number">256</span> + j * <span class="number">81</span>;</span><br><span class="line">				<span class="type">int</span> y = <span class="number">179</span> + i * <span class="number">102</span><span class="number">+10</span>;</span><br><span class="line">				<span class="type">int</span> zhiwutype = map[i][j].type<span class="number">-1</span>;</span><br><span class="line">				<span class="type">int</span> index = map[i][j].frameIndex;</span><br><span class="line">				<span class="comment">//putimagePNG(curX , curY , img);</span></span><br><span class="line">				<span class="keyword">if</span> (imgZhiWu[zhiwutype][index] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">					<span class="built_in">putimagePNG</span>(x, y, imgZhiWu[zhiwutype][index]);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//刷新图形窗口</span></span><br><span class="line">	<span class="comment">//FlushBatchDraw(); //刷新图形窗口，显示所有绘制的内容</span></span><br><span class="line">	<span class="built_in">EndBatchDraw</span>(); <span class="comment">//结束批量绘图，显示所有绘制的内容</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户的点击事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">userClick</span><span class="params">()</span></span>&#123;</span><br><span class="line">ExMessage msg; <span class="comment">//专门用来存储图形窗口中发生的消息</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> status = <span class="number">0</span>; <span class="comment">//用来表示当前的状态，0表示没有点击任何卡牌，1表示点击了某张卡牌</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//peekmessage(); //处理鼠标消息</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">peekmessage</span>(&amp;msg))&#123;</span><br><span class="line">		<span class="keyword">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class="comment">//左键按下</span></span><br><span class="line">			<span class="keyword">if</span>(msg.x&gt; <span class="number">338</span> &amp;&amp; msg.x &lt; <span class="number">338</span> + <span class="number">65</span> * ZHI_WU_COUNT &amp;&amp; msg.y &gt; <span class="number">6</span> &amp;&amp; msg.y &lt; <span class="number">96</span>)&#123;</span><br><span class="line">				<span class="type">int</span> index = (msg.x - <span class="number">338</span>) / <span class="number">65</span>; <span class="comment">//计算用户点击的是第几张卡牌</span></span><br><span class="line">				status = <span class="number">1</span>; <span class="comment">//表示用户点击了某张卡牌</span></span><br><span class="line">				curZhiWu = index + <span class="number">1</span>; <span class="comment">//记录当前选中的植物</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (msg.message == WM_MOUSEMOVE &amp;&amp; status == <span class="number">1</span>) &#123; <span class="comment">//鼠标移动</span></span><br><span class="line">			curX = msg.x;</span><br><span class="line">			curY = msg.y;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (msg.message == WM_LBUTTONUP) &#123; <span class="comment">//鼠标左键抬起</span></span><br><span class="line">			<span class="keyword">if</span> (msg.x &gt; <span class="number">256</span> &amp;&amp; msg.y &gt; <span class="number">179</span> &amp;&amp; msg.y &lt; <span class="number">489</span>) &#123;</span><br><span class="line">				<span class="type">int</span> row = (msg.y - <span class="number">179</span>) / <span class="number">102</span>; <span class="comment">//计算用户松开鼠标时，植物应该种植在哪一行</span></span><br><span class="line">				<span class="type">int</span> col = (msg.x - <span class="number">256</span>) / <span class="number">81</span>; <span class="comment">//计算用户松开鼠标时，植物应该种植在哪一列</span></span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (map[row][col].type == <span class="number">0</span>) &#123;</span><br><span class="line">					map[row][col].type = curZhiWu;</span><br><span class="line">					map[row][col].frameIndex;</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">//status = 0; // 重置“拖动状态”</span></span><br><span class="line">				<span class="comment">//curZhiWu = 0; // 重置“选中植物”（后续可改为“判断种植后再重置”</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变游戏的状态</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateGame</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 1. 静态变量记录上一次更新动画的时间（只初始化一次）</span></span><br><span class="line"><span class="type">static</span> DWORD lastAnimTime = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 2. 当前时间（毫秒）</span></span><br><span class="line">DWORD now = <span class="built_in">GetTickCount</span>();</span><br><span class="line"><span class="comment">// 3. 动画更新间隔：100毫秒（可调整，值越大动画越慢）</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ANIM_INTERVAL = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 只有当时间间隔超过100毫秒，才更新动画帧</span></span><br><span class="line">	<span class="keyword">if</span> (now - lastAnimTime &gt;= ANIM_INTERVAL) &#123;</span><br><span class="line">		<span class="comment">// 更新植物的动画（原逻辑不变，只是包在时间判断里）</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (map[i][j].type &gt; <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="type">int</span> zhiwutype = map[i][j].type - <span class="number">1</span>;</span><br><span class="line">					<span class="comment">// 修复：原代码判断的是“更新前的帧”，这里改成“更新后的帧”</span></span><br><span class="line">					map[i][j].frameIndex++;</span><br><span class="line">					<span class="comment">// 检查下一帧是否存在，不存在则重置为0</span></span><br><span class="line">					<span class="keyword">if</span> (imgZhiWu[zhiwutype][map[i][j].frameIndex] == <span class="literal">NULL</span>) &#123;</span><br><span class="line">						map[i][j].frameIndex = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 4. 更新“上一次动画时间”，为下次判断做准备</span></span><br><span class="line">		lastAnimTime = now;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">startUI</span><span class="params">()</span></span>&#123;</span><br><span class="line">IMAGE imgBg,imgMenu1, imgMenu2;</span><br><span class="line"><span class="built_in">loadimage</span>(&amp;imgBg, _T(<span class="string">&quot;res/menu.png&quot;</span>));</span><br><span class="line"><span class="built_in">loadimage</span>(&amp;imgMenu1, _T(<span class="string">&quot;res/menu1.png&quot;</span>));</span><br><span class="line"><span class="built_in">loadimage</span>(&amp;imgMenu2, _T(<span class="string">&quot;res/menu2.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="built_in">BeginBatchDraw</span>(); <span class="comment">//开始批量绘图，防止闪烁(双缓冲</span></span><br><span class="line">		<span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;imgBg); <span class="comment">//将背景图片绘制到窗口的(0,0)位置</span></span><br><span class="line">		<span class="built_in">putimagePNG</span>(<span class="number">474</span>, <span class="number">75</span>, flag ? &amp;imgMenu2 : &amp;imgMenu1);</span><br><span class="line">		<span class="built_in">EndBatchDraw</span>(); <span class="comment">//结束批量绘图，显示所有绘制的内容 </span></span><br><span class="line"></span><br><span class="line">		ExMessage msg; <span class="comment">//专门用来存储图形窗口中发生的消息</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">peekmessage</span>(&amp;msg))&#123;</span><br><span class="line">			<span class="keyword">if</span> (msg.message == WM_MOUSEMOVE) &#123; <span class="comment">//鼠标移动</span></span><br><span class="line">				<span class="keyword">if</span> (msg.x &gt; <span class="number">474</span> &amp;&amp; msg.x &lt; <span class="number">474</span> + <span class="number">300</span> &amp;&amp; msg.y &gt; <span class="number">75</span> &amp;&amp; msg.y &lt; <span class="number">75</span> + <span class="number">100</span>) &#123;</span><br><span class="line">					flag = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> &#123;</span><br><span class="line">					flag = <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class="comment">//左键按下</span></span><br><span class="line">				<span class="keyword">if</span> (msg.x &gt; <span class="number">474</span> &amp;&amp; msg.x &lt; <span class="number">474</span> + <span class="number">300</span> &amp;&amp; msg.y &gt; <span class="number">75</span> &amp;&amp; msg.y &lt; <span class="number">75</span> + <span class="number">100</span>) &#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">gameInit</span>();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">startUI</span>();</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> timer = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">userClick</span>();</span><br><span class="line">		timer += <span class="built_in">getDelay</span>();</span><br><span class="line"></span><br><span class="line">		<span class="built_in">updateGame</span>();</span><br><span class="line">		<span class="built_in">updateWindow</span>();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 新增：用定时器控制帧率（16毫秒≈60FPS，不阻塞输入）</span></span><br><span class="line">		<span class="type">static</span> DWORD lastFrameTime = <span class="number">0</span>;</span><br><span class="line">		DWORD now = <span class="built_in">GetTickCount</span>();</span><br><span class="line">		<span class="keyword">if</span> (now - lastFrameTime &lt; <span class="number">16</span>) &#123;  <span class="comment">// 确保每帧至少间隔16毫秒</span></span><br><span class="line">			<span class="built_in">Sleep</span>(now - lastFrameTime);  <span class="comment">// 只在“帧太快”时轻微延时，不阻塞输入</span></span><br><span class="line">		&#125;</span><br><span class="line">		lastFrameTime = now;</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>); <span class="comment">//等待用户按任意键</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>嵌入式</tag>
        <tag>lvgl</tag>
        <tag>freertos</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>友链</title>
    <url>/syy.github.io/2025/09/12/blog/</url>
    <content><![CDATA[<p>感谢朋友的支持,以下是友链,请多多支持:<br>
<img src="/img/dd002.jpg" alt="小海"><br>
小海:<a href="https://norubias.site">https://norubias.site</a></p>
<p><img src="/img/dd001.jpg" alt="柊野">  <!-- 和封面图一样，用 /img/ 开头 --><br>
柊野:<a href="https://zhongye1.github.io/">https://zhongye1.github.io/</a><br>
专用笔记库:<a href="https://zhongye1.github.io/Arknight-notes/">https://zhongye1.github.io/Arknight-notes/</a></p>
]]></content>
  </entry>
</search>
