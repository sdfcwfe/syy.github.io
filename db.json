{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/002.png","path":"img/002.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/003.jpg","path":"img/003.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/error-page.png","path":"img/error-page.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/img/001.jpg","path":"img/001.jpg","modified":0,"renderable":0},{"_id":"source/img/dd001.jpg","path":"img/dd001.jpg","modified":0,"renderable":0},{"_id":"source/img/dd002.jpg","path":"img/dd002.jpg","modified":0,"renderable":0},{"_id":"source/img/s001.jpg","path":"img/s001.jpg","modified":0,"renderable":0},{"_id":"source/img/s002.jpg","path":"img/s002.jpg","modified":0,"renderable":0},{"_id":"source/img/s003.jpg","path":"img/s003.jpg","modified":0,"renderable":0},{"_id":"source/img/s005.jpg","path":"img/s005.jpg","modified":0,"renderable":0},{"_id":"source/img/s006.jpg","path":"img/s006.jpg","modified":0,"renderable":0},{"_id":"source/img/s004.jpg","path":"img/s004.jpg","modified":0,"renderable":0},{"_id":"source/img/s007.jpg","path":"img/s007.jpg","modified":0,"renderable":0},{"_id":"source/img/s008.jpg","path":"img/s008.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"313b95b76af98aba8cef776552174ef177c36382","modified":1757693413199},{"_id":"source/_posts/friend-blog.md","hash":"2993605800a7d8b126ad86657af8ae80d7f10028","modified":1757734293065},{"_id":"source/_posts/信号与系统.md","hash":"278d8436628da8cfa4287290d012c7509e5a565b","modified":1757693413201},{"_id":"source/img/dd001.jpg","hash":"6f00d6587aeb4e671d9148278c6057795c43907f","modified":1757693413208},{"_id":"source/_posts/study-for-schematic-diagram.md","hash":"8029df0da74ebc45e8fd1a8408dae4daf638d316","modified":1758008050748},{"_id":"source/_posts/植物大战僵尸制作.md","hash":"be9dd1c010fdfd419e3ba58dcfba7e2e2873651b","modified":1757952743030},{"_id":"source/img/dd002.jpg","hash":"6db9eec219d13ee031cdb836fdf16f461ee4c8cc","modified":1757693413210},{"_id":"source/img/s005.jpg","hash":"81c251c55ddf2d3e09f648d683e739f206afdb85","modified":1757693413231},{"_id":"source/img/s002.jpg","hash":"f53044500c977a5525e64c78e3dd36acc7914cdb","modified":1757693413216},{"_id":"source/img/s001.jpg","hash":"2931ca8e976861990a3e8b140fa99740d7021c06","modified":1757693413213},{"_id":"source/img/s008.jpg","hash":"9670975cf8588f076616ba26a4ee2de1440fff8a","modified":1758003378801},{"_id":"source/img/s003.jpg","hash":"8665e69f0ca91470a21d1ae480e5aa126660a56b","modified":1757693413221},{"_id":"source/img/s004.jpg","hash":"14b5ec0b638119e733232d0226631381ced6e370","modified":1757693413228},{"_id":"source/img/s007.jpg","hash":"59c5e72c36163f1aa5131e7cb20a3c87e45e2060","modified":1757953095044},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1757128083368},{"_id":"themes/butterfly/.gitignore","hash":"1e843a7254515d97ddb1d1d32ae83ebfae937f54","modified":1757128083368},{"_id":"themes/butterfly/README_CN.md","hash":"92e45255b8725f0a00450c88fcfd51ec61e1db67","modified":1757128083370},{"_id":"themes/butterfly/README.md","hash":"e1b9096ae0c4e5ef0a911aec05dbad4a3aae3173","modified":1757128083369},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"3b572099a992e30267f5fe4cd3c582ff7ac9f083","modified":1757128083363},{"_id":"themes/butterfly/_config.yml","hash":"18a653bfae21d615e7dae84e444f34308b3eb65e","modified":1758003432106},{"_id":"themes/butterfly/package.json","hash":"8732cd296aa3e280a1f2cfe7935a9747ea7c8078","modified":1757128083434},{"_id":"themes/butterfly/plugins.yml","hash":"6d953cb0665451af0b6ef7441c40f730ce619666","modified":1757128083434},{"_id":"themes/butterfly/languages/ko.yml","hash":"70d6df7cf6472799faf4778405b332101ea822c1","modified":1757128083373},{"_id":"themes/butterfly/layout/category.pug","hash":"a7e9805a781e34e38d27462e6ce2a5821c34bb9f","modified":1757128083375},{"_id":"themes/butterfly/languages/default.yml","hash":"2e3beaf7fb585d83c3e7cd1cca51573f42935f3c","modified":1757128083371},{"_id":"themes/butterfly/languages/ja.yml","hash":"bde04a89febd0dbf320eac4da4ecd81624f2f29f","modified":1757128083372},{"_id":"themes/butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1757128083375},{"_id":"themes/butterfly/languages/en.yml","hash":"2e3beaf7fb585d83c3e7cd1cca51573f42935f3c","modified":1757128083372},{"_id":"themes/butterfly/layout/index.pug","hash":"a93004cc8ec8050df603d32a6e6e02cd96fd9875","modified":1757128083432},{"_id":"themes/butterfly/layout/post.pug","hash":"65c4a49c65c3fc4d9dc88b9791a75710c698c3a1","modified":1757128083433},{"_id":"themes/butterfly/layout/page.pug","hash":"7ce2a49c6c41847de4ccea377ade116339984434","modified":1757128083432},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1757128083365},{"_id":"themes/butterfly/layout/tag.pug","hash":"ca5333bd262cb58c195c844b593a0eed0c721766","modified":1757128083433},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"10ce05c8dbde09f53bdabe40b5388de9ccc71a31","modified":1757128083365},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1757128083366},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1757128083366},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"b59fedd9e1e65112d6a90dc7f55179085d0f1a6a","modified":1757128083374},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1757128083367},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"3cdeb46ad36f3b76703b4f39c72a8aa1a15425cb","modified":1757128083373},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"da95d64f44e1e6b516d1f96f57b4b0a537c29c19","modified":1757128083376},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"e1611a30df80cbe7ecf60be2e0cdd816ecabdd03","modified":1757128083376},{"_id":"themes/butterfly/languages/zh-HK.yml","hash":"c93e510c7b119173226f3b0afb87c5f553f6eea8","modified":1757128083374},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"1d11e334b22dbbedcb0f751f9ee9789d4416605e","modified":1757128083377},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"062137cb4d078b27680da1ae28d524a9c963eebc","modified":1757128083392},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"3617840416f26078117f760579fb544dce07e1bc","modified":1757128083394},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"e5e6c05a621483b3542f2884e8ba45e84b1e973a","modified":1757128083383},{"_id":"themes/butterfly/scripts/common/postDesc.js","hash":"ba98361b9d469076bfb045e5ff42eaf764a38fb1","modified":1757128083436},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1757128083437},{"_id":"themes/butterfly/scripts/events/404.js","hash":"039fc75f363d79669b0b2177d929cdff6f2ef7a4","modified":1757128083437},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"3e65b7bf6bccccbba7e15349f0a44f15c64c5b5e","modified":1757128083394},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1757128083438},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"cead7891fbc0a53ffca4d68124e68efa855354a5","modified":1757128083438},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"20a6ebf63439501a4b3fc81e7a2a2ea5d103bace","modified":1757128083441},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"b23108d29fff3e32384d8689c8bcd2ab306a1ae7","modified":1757128083440},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"0cdf781a8c14d7b50d309e69f282ec7b178804bb","modified":1757128083442},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"d2878483c160999240e969a34e3ddc51a780821b","modified":1757128083441},{"_id":"themes/butterfly/scripts/helpers/getArchiveLength.js","hash":"bf77635e920eaf52bceebc95f87c7c87a7ca8038","modified":1757128083442},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1757128083439},{"_id":"themes/butterfly/scripts/tag/chartjs.js","hash":"195ba802d7e8406c155124a9c939a2318f82938b","modified":1757128083446},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"bac639c404588ea62e601ef0bcd368c3bd0119af","modified":1757128083439},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"7b1b16e1e8e08245a345764616956be50487eb53","modified":1757128083438},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"b9af69d8998d748178348d93a19daccff0550c56","modified":1757128083443},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"950b7d0966429bf0f9e6c5e1161e50e545e320b4","modified":1757128083444},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"00c5742ad1c75b3c5684d02ffc6a1921399e5376","modified":1757128083443},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"2f44e1b3ccd170b256eae178299d6fa933a8d490","modified":1757128083445},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"fa3d0a64f7fce4aff7928d4ddd95548978ba001c","modified":1757128083446},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"25eefe10189caf3910a0e5d5b2f2043ae9255531","modified":1757128083446},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"45367c4ce827329867dbcc750ec125da9ccb2cfd","modified":1757128083444},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"cf0bc17d0180231167cc6aa8a00fc64f198cb9f9","modified":1757128083448},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f02fb085a88a2c0c82aeffacc24e1b71c74bd7c0","modified":1757128083446},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"89c6c78d2db43b190055d5690741a79bab4f3e7e","modified":1757128083448},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"f589fb6646bd17cf12d77a9b251dd614e1c8b899","modified":1757128083450},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"40bc9a065e3a1423e0e66f4911e00713ca9f5e9e","modified":1757128083450},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1757128083449},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"50d8d8fac5c5b6e26317028895d7d82a2cf46606","modified":1757128083448},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"176804f07567aa80f1ed95897a968a996b155dec","modified":1757128083451},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"3c486b149e28edd1a06843f05a5c355000991b82","modified":1757128083451},{"_id":"themes/butterfly/source/img/002.png","hash":"877a3dca02d390a508b0cc5059f02193dcc1c230","modified":1757157454383},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"fdb5482d04a75bd79946ad1ed291d281d0e9362d","modified":1757128083493},{"_id":"themes/butterfly/source/css/var.styl","hash":"d1eec577074ab7b262182885576135bf1896e12c","modified":1757128083481},{"_id":"themes/butterfly/source/js/main.js","hash":"5a52047b8520f79864d5a4ee2379a29751aead23","modified":1757128083491},{"_id":"themes/butterfly/source/js/utils.js","hash":"b2ed9937fd00459c0e569db709a26cf8738ab18d","modified":1757128083494},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1757128083481},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1757128083482},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"e93a36d3c29b5a02c7f26a23f96e1f84b063cbe8","modified":1757128083377},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"9ea75b06f19bf356f340f4a3fc1bdc0713cfe445","modified":1757128083378},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c2156c77a011b20fafd34f03ca073397c21b099f","modified":1757128083377},{"_id":"themes/butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1757128083486},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"56a3c32de1a15627ff38c67f1131cdd6ec5ac924","modified":1757128083378},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1757128083489},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1757128083488},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"83ed05ef1e39f2ee70c3fba2cf96e488d8ffec66","modified":1757128083380},{"_id":"themes/butterfly/layout/includes/head/structured_data.pug","hash":"8ef72cd688999bf3915be6724c12700a1e2724d9","modified":1757128083381},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1757128083380},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"44331c9db74b281b5c5c41439d3407a9076df1a1","modified":1757128083381},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1757128083379},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"733184f88e3a586a5fcc9d193ad500556b6c8eed","modified":1757128083382},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"1e1a69aa2cbda2e621c741b3802093244b3cc04e","modified":1757128083379},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"d4d266eced4b9167bed86bcc5addc327f78cbdcc","modified":1757128083384},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"9d2d539555bab495959b9df734ed5c43a9f9e5a9","modified":1757128083385},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"d76ce71ba106e350670c021a3dcae57547d01830","modified":1757128083385},{"_id":"themes/butterfly/layout/includes/page/404.pug","hash":"15d32c511e4875066fcbe9cb84c3ada07b5a7c41","modified":1757128083389},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"7d799c4694adb6e265e3f4b975d7f7f6a7021a17","modified":1757128083382},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f478a82ba4c15d4f6a5db38eca5c61f7054fa71d","modified":1757128083382},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"e2d31e0f450ad42c47f7ee96375799342bf2f19b","modified":1757128083383},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1757128083389},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"6b0fa5f048aca8e9cbe56978301af918cf7ac34a","modified":1757128083390},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"79ad31eb72a9e14007770b18a426406a25315b38","modified":1757128083391},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"efb40388e37cca0b5e7c3c66e811a42f8d32c910","modified":1757128083390},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1757128083427},{"_id":"themes/butterfly/layout/includes/page/shuoshuo.pug","hash":"b2423cfc57a5e3a0e1112ff7c18d5c5c720d89d5","modified":1757128083391},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1757128083426},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1757128083427},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1757128083428},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1757128083428},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"1aba8aa7cd767dc96879d13a13b4c8ceb9023233","modified":1757128083428},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"d8753772889b5d0f4d15639ed6af5e91e53b1d03","modified":1757128083429},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1757128083430},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1757128083429},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1757128083430},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"1dd19a564320d248dbcee7f118a5b96c6466da65","modified":1757128083430},{"_id":"themes/butterfly/layout/includes/post/outdate-notice.pug","hash":"b7ce9484bc5c97ea6154f0b78fb9b8951fafedbd","modified":1757128083393},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"45f620cd87b9ef2aa9d1e024e697ed6b4eecff34","modified":1757128083431},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1757128083431},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"fcddd80cdeb6aa81f342cd9f0102302f6ba087a8","modified":1757128083431},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"b96c232e5178d927987791d9ae386dd83679535a","modified":1757128083393},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"db92f25ff3fd061882f81bf74ca560ff66983a0c","modified":1757128083393},{"_id":"themes/butterfly/layout/includes/mixins/indexPostUI.pug","hash":"f3389fa9ae4fa32e3c16573286583bc3023e57ad","modified":1757128083387},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"ef7afe0df7a3746744ac8185da7163b7406120ca","modified":1757128083386},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"ed79fef5b5025415ea12eaed970f3fe7f6ef9596","modified":1757128083396},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1757128083412},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"88f979a0b1a19eeb0db229247833bf9c6865c3b9","modified":1757128083421},{"_id":"themes/butterfly/layout/includes/third-party/umami_analytics.pug","hash":"bc35a1552d26ecdeeadbf06300078dbb5128a6e5","modified":1757128083426},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"209b8c04b88cf21f732ddb8bf23dbeaf2038ea1e","modified":1757128083453},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"d29ee6a07e6716c0dc1d4533c87b19b6076fefd3","modified":1757128083420},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"97c3c3bc0272fd8483760a0efdcd2fd4ceed8a08","modified":1757128083453},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"236c3ce26dd76e80b04d457789475c42da5ac0c8","modified":1757128083425},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"a51edfd3e499e7d38c32241c40e8e4d371efca73","modified":1757128083458},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"4c9849df9c68d892c7df0ca28123aeb0dc9dc424","modified":1757128083466},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"205ccc7d0ec6ce1193b46bc0c9ce0385594581fb","modified":1757128083466},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"67062d597408068e4a59e95851e98fed34b745da","modified":1757128083454},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"ad66212554468b7067590308ed4cf40524fea662","modified":1757128083466},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5abe5480d83ff8b452a780a484d50a44091475bf","modified":1757128083468},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"dcff804c4c237e1e908481b44c1ac4e39ac0da34","modified":1757128083469},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"c4cda7b0c99015df29ce00fdfddd2f7679653754","modified":1757128083468},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"fc26e980fedde31644ebf878967f66ef9ba32be2","modified":1757128083471},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"1f8d715faf3b91b53426e38195c0920afb3bfa1c","modified":1757128083469},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"7543bb688876a946538d66b991c71b94b5216277","modified":1757128083472},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"865fafbb12b83861b3fff572bacf053fe4eb6c07","modified":1757128083458},{"_id":"themes/butterfly/source/css/_page/shuoshuo.styl","hash":"79bb1d9a27822ed5675d1e52f5dbd0e2f5d5010a","modified":1757128083471},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1757128083459},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"4cc02bcbaa4a1933a82a9ea57a603fe2d059fc77","modified":1757128083459},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5692bcf8929f7ef12b10d860da6cb90ca55752c0","modified":1757128083460},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"7536c44e78115559a996d0384adec38b78d8dc25","modified":1757128083461},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"7d7554573c005399bc8c2264a85896d2d51be1e1","modified":1757128083462},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1757128083461},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"ef8e8549fe7ad4b99793844a93b4a89f77f417d5","modified":1757128083463},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"543eaf9c7df7e0db841e5946ee5f9082c3c46290","modified":1757128083462},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d9cdf564a822a585e67fd5bac8573ba87eeb3743","modified":1757128083463},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"30d1f809efd252ed0233d96d4374efd2b01d2292","modified":1757128083475},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1757128083476},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"d27dbccaf3de1c9158d19e4fd49a25953cb5778d","modified":1757128083477},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"a0f5835f04358122e8b1d38dd3e8da09a1b5b431","modified":1757128083464},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"0af7c8754f04bdd9a02a14d880774753bd2e35ee","modified":1757128083465},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"3be8d0a75e7cc96548667cae0cb6a474279bd0b5","modified":1757128083477},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"084dc4dfb41f55e237a9d6cf8c2f5dba729b83be","modified":1757128083464},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"216f52fefc2274b542b549d8470503e6f1a308fb","modified":1757128083478},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1757128083478},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d8a8275a68a1421c4c09b604cf78bea16c1d0463","modified":1757128083473},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"de8437a058a315d14d7e7034066f095b7b3ed4b4","modified":1757128083474},{"_id":"themes/butterfly/source/css/_tags/series.styl","hash":"0657169849bc4bf4d93b5492ade040c8f58c1901","modified":1757128083478},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"6c4cbdadd9a49029fe0c59e29808d873e5b6b6ee","modified":1757128083473},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"3a88eedcb694da79e92581ce50cb1a430b1fb615","modified":1757128083479},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"7119f2f2943de71999d3dd6ba5c60cde846f114b","modified":1757128083492},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"e846ddaef494d46cdfa2379deacfe74fa1cc5264","modified":1757128083479},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"1f2b86df86df81c3a59377b29102314ffc73dfa6","modified":1757128083474},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"a2b783230a9143de69004cfc914d9f55e6fc1660","modified":1757128083493},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1757128083480},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1757128083397},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"cbfbcf34a24d21ba2b21cf9eedb76f4c3c563c5a","modified":1757128083397},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1757128083397},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f0a90d8e39915a74b16ef22e851f179415cd7eaa","modified":1757128083396},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1757128083398},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1757128083398},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"7df4d27cf9e576c6b9c1e4f76a100a41749ca8bb","modified":1757128083395},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"5b29badecbbe828112c001156023fc0566045cf6","modified":1757128083401},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"be45b522286bbc64724341f23a5056ad24d3f796","modified":1757128083399},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"24d094fd917947c0ca7492fa094328b1a183b873","modified":1757128083401},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"62466b251052cae609b6369d4cb4b6a85320757d","modified":1757128083402},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"e8438941085def0591a72fc9b0d705dbf107f54f","modified":1757128083402},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"7884883ec15792f7e54daacb3c62b851dde2b66a","modified":1757128083399},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1757128083400},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"89c63a5f0c0ab6314de7158fbc8fcbc84997fc55","modified":1757128083403},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f2ea5249b3e6670f6c8c77868f4f42c502e43830","modified":1757128083404},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"c81fa7d8a5cb96d1ae07bfa8c46b84a58161add1","modified":1757128083405},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"592b2251db6c1abeb8b0eebe3b2e6d9aa0dec445","modified":1757128083406},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"8af585e6d6f73ee57114eefad574dc6e8ea9f570","modified":1757128083405},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"58914c58a190e3bc0aa37cb581e77e442b563501","modified":1757128083406},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1757128083408},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"332b532bafbaf369fde840883b77e5a23d050a39","modified":1757128083408},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"ea9766439b6b1936306916a8b08d2681afbc8ea9","modified":1757128083409},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"53d99831f29aeb2e336ed1407d79590041f77002","modified":1757128083410},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"9d84a681289175dec75a85f301d2fc9ce1b2bb7a","modified":1757128083408},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"30a7d157890de69deab28baa47fb7bb28b040efd","modified":1757128083410},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"27fa75affebc6e84a487c62bceff783bde595256","modified":1757128083415},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"187302dbc916852ff2fdf47061e272c061611dda","modified":1757128083415},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e2bf15357485cd502414b3b20f5b1f762a2fd014","modified":1757128083412},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"24f18b0c67803210d53abbf9c1d454c000b06eee","modified":1757128083411},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"fa4b4194749d05f7249f365f2b89c0281057ce54","modified":1757128083416},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"a7c07dbc1e970a5b247091458e1ee9b144a3366d","modified":1757128083416},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"72e2970b23570e308f8af5d8ba8e5e3321d01bbf","modified":1757128083416},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"34edfebf0cace0852806be774910ccb0e0914650","modified":1757128083416},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"d2e12a9fc302a4efe52c90d44896fbd73e193a1f","modified":1757128083418},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d376ec17fb19fcdcf0d2ad71330190146d3af879","modified":1757128083419},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"ed918f7e4bd277a7c5ae638b0dd1eee66048279e","modified":1757596625606},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ec6c685080634ac46ffbea1b8f10313388888f43","modified":1757128083419},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"af66d13204030d47537b9e31a6173e63589ce7ff","modified":1757128083413},{"_id":"themes/butterfly/layout/includes/third-party/math/chartjs.pug","hash":"732eb1118ea1a73aa5c164d639097c614f8e9953","modified":1757128083413},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"db2f4fff80a1166476ea76ae004aa186df11bad3","modified":1757128083414},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ca2fc5928ca292f29fd8333c73733344994096fb","modified":1757128083414},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"5c944052280c5ed046d2cfeb54b0da8876af0ec6","modified":1757128083424},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"7f0ede1cd3fed2669c94a8e1b21bc0b183f310b8","modified":1757128083422},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"e51e896ccb13900de38dc81cf44dc789e2418a12","modified":1757128083424},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"efef352c1d122409575386bf3894dce8e87032e2","modified":1757128083425},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"077ec530831be1d80e93da380406b9f5abd0918a","modified":1757128083456},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"2622b4cf9189fa23e4a422aaf9ef272e4f2c6137","modified":1757128083423},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"013756ff3363344987cc00fc9bd833baf193c341","modified":1757128083423},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"1883c91d43bff10aae55122a21e0b064b6f5c9dd","modified":1757128083457},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"f8557548d2ad8dd149c562193991c6c6cda02415","modified":1757128083423},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"de4bb5fc2dfca368b35e4c1109c92f7abc9e2245","modified":1757128083457},{"_id":"source/img/001.jpg","hash":"4733a0ae65b526cc50f87229ddce3bdeeca1366b","modified":1758002121676},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"ef52ebf1e8e751a412f9456fdaeee7d88afd9a72","modified":1757128083456},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"9f02598b5e4296aec6470639d4bac4c9ac46392e","modified":1757128083455},{"_id":"themes/butterfly/source/img/003.jpg","hash":"2931ca8e976861990a3e8b140fa99740d7021c06","modified":1748250872775},{"_id":"themes/butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1757128083486},{"_id":"source/img/s006.jpg","hash":"f4abeaca541975e647265bc5c2b2f28df4ac3ea3","modified":1757953027388},{"_id":"public/search.xml","hash":"87e13a97956a73acdf3f53b22253daf2c8c76361","modified":1758008091699},{"_id":"public/2025/09/08/信号与系统/index.html","hash":"0d66b8102d6d56b7043e8991cca88b3f1eca395f","modified":1758008091699},{"_id":"public/2025/09/12/植物大战僵尸制作/index.html","hash":"2479d23be071cb0a4bb675544a8a3d57be43d974","modified":1758008091699},{"_id":"public/2025/09/11/hello-world/index.html","hash":"331c676499822646e1a7aa2edb9493be6227e3c5","modified":1758008091699},{"_id":"public/2025/09/13/friend-blog/index.html","hash":"0e2b3ddfac1601a15695a3cd88b52d31519d6b17","modified":1758008091699},{"_id":"public/2025/09/16/study-for-schematic-diagram/index.html","hash":"310f8e2e74c2b323c6e96486ff31bea44d71e49a","modified":1758008091699},{"_id":"public/archives/index.html","hash":"89efe639b4f402af5a5246878f7b50b3c525e2c4","modified":1758008091699},{"_id":"public/archives/2025/index.html","hash":"23cd89efd650941618be6bcad1a96b6c7e708370","modified":1758008091699},{"_id":"public/index.html","hash":"71d247503e1210a90e17cd6310835440eed45e7a","modified":1758008091699},{"_id":"public/archives/2025/09/index.html","hash":"9ba49f922c37a710df5f8a5cf3d0e4490ce92aac","modified":1758008091699},{"_id":"public/tags/嵌入式/index.html","hash":"1bdd3531c6b8d1906c8c468e6f1f27e0218bfca1","modified":1758008091699},{"_id":"public/tags/理论学习/index.html","hash":"bd541109172a2a8e4eeeb1333a30f559c1e8a2e9","modified":1758008091699},{"_id":"public/tags/lvgl/index.html","hash":"6ac8f55eddf60ef95b99772b830b21c825fba1aa","modified":1758008091699},{"_id":"public/tags/专业课/index.html","hash":"945074f94d14956f169b097d10d38b2b7f71cc0c","modified":1758008091699},{"_id":"public/tags/freertos/index.html","hash":"b9f07579b63a91eef146d1b09347b8332ac39ebc","modified":1758008091699},{"_id":"public/tags/游戏/index.html","hash":"6a153f258390f9c4826fde2686fa2002dcd9b73d","modified":1758008091699},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1758008091699},{"_id":"public/img/002.png","hash":"877a3dca02d390a508b0cc5059f02193dcc1c230","modified":1758008091699},{"_id":"public/img/dd001.jpg","hash":"6f00d6587aeb4e671d9148278c6057795c43907f","modified":1758008091699},{"_id":"public/img/dd002.jpg","hash":"6db9eec219d13ee031cdb836fdf16f461ee4c8cc","modified":1758008091699},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1758008091699},{"_id":"public/img/s002.jpg","hash":"f53044500c977a5525e64c78e3dd36acc7914cdb","modified":1758008091699},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1758008091699},{"_id":"public/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1758008091699},{"_id":"public/img/s005.jpg","hash":"81c251c55ddf2d3e09f648d683e739f206afdb85","modified":1758008091699},{"_id":"public/css/index.css","hash":"ab57d830a94811e941d2287383ab4cf32e1b52ec","modified":1758008091699},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1758008091699},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758008091699},{"_id":"public/js/utils.js","hash":"ce898acc9081131cdc3a97baf43cb7b1a25da47f","modified":1758008091699},{"_id":"public/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1758008091699},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1758008091699},{"_id":"public/js/main.js","hash":"fb746a3e67d0373deea8481110dd436fea4ca38c","modified":1758008091699},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"982e19bbba01db904832ad94ecffb5c75036181a","modified":1758008091699},{"_id":"public/img/003.jpg","hash":"2931ca8e976861990a3e8b140fa99740d7021c06","modified":1758008091699},{"_id":"public/img/s001.jpg","hash":"2931ca8e976861990a3e8b140fa99740d7021c06","modified":1758008091699},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"43d4529ba2f1204484109138f2bd7ff25afa24ff","modified":1758008091699},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"0cc2b1c6000e9941268768ad3aff2ed9d6f1856f","modified":1758008091699},{"_id":"public/img/s008.jpg","hash":"9670975cf8588f076616ba26a4ee2de1440fff8a","modified":1758008091699},{"_id":"public/assets/algolia/algoliasearch.js","hash":"5ac1ea04228fc1fe7ba0e8d5d7e92422a6898352","modified":1758008091699},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1758008091699},{"_id":"public/img/s003.jpg","hash":"8665e69f0ca91470a21d1ae480e5aa126660a56b","modified":1758008091699},{"_id":"public/img/s004.jpg","hash":"14b5ec0b638119e733232d0226631381ced6e370","modified":1758008091699},{"_id":"public/img/s007.jpg","hash":"59c5e72c36163f1aa5131e7cb20a3c87e45e2060","modified":1758008091699},{"_id":"public/img/001.jpg","hash":"4733a0ae65b526cc50f87229ddce3bdeeca1366b","modified":1758008091699},{"_id":"public/img/s006.jpg","hash":"f4abeaca541975e647265bc5c2b2f28df4ac3ea3","modified":1758008091699}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"友链","date":"2025-09-12T16:40:51.000Z","cover":"/img/s005.jpg","top":1,"_content":"\n感谢朋友的支持,以下是友链,请多多支持:\n![小海](/syy.github.io/img/dd002.jpg)\n小海:https://norubias.site\n\n![柊野](/syy.github.io/img/dd001.jpg) <!-- 和封面图一样，用 /img/ 开头 -->\n柊野:https://zhongye1.github.io/, 专用笔记库:https://zhongye1.github.io/Arknight-notes/\n\n","source":"_posts/friend-blog.md","raw":"---\ntitle: 友链\ndate: 2025-09-13 00:40:51\ncover: /img/s005.jpg\ntop: 1 #这里加一个top就行\ntags:\n---\n\n感谢朋友的支持,以下是友链,请多多支持:\n![小海](/syy.github.io/img/dd002.jpg)\n小海:https://norubias.site\n\n![柊野](/syy.github.io/img/dd001.jpg) <!-- 和封面图一样，用 /img/ 开头 -->\n柊野:https://zhongye1.github.io/, 专用笔记库:https://zhongye1.github.io/Arknight-notes/\n\n","slug":"friend-blog","published":1,"updated":"2025-09-13T03:31:33.065Z","comments":1,"layout":"post","photos":[],"_id":"cmfm8mmq400007cr8bq7ics1f","content":"<p>感谢朋友的支持,以下是友链,请多多支持:<br>\n<img src=\"/syy.github.io/img/dd002.jpg\" alt=\"小海\"><br>\n小海:<a href=\"https://norubias.site\">https://norubias.site</a></p>\n<p><img src=\"/syy.github.io/img/dd001.jpg\" alt=\"柊野\"> <!-- 和封面图一样，用 /img/ 开头 --><br>\n柊野:<a href=\"https://zhongye1.github.io/\">https://zhongye1.github.io/</a>, 专用笔记库:<a href=\"https://zhongye1.github.io/Arknight-notes/\">https://zhongye1.github.io/Arknight-notes/</a></p>\n","excerpt":"","more":"<p>感谢朋友的支持,以下是友链,请多多支持:<br>\n<img src=\"/syy.github.io/img/dd002.jpg\" alt=\"小海\"><br>\n小海:<a href=\"https://norubias.site\">https://norubias.site</a></p>\n<p><img src=\"/syy.github.io/img/dd001.jpg\" alt=\"柊野\"> <!-- 和封面图一样，用 /img/ 开头 --><br>\n柊野:<a href=\"https://zhongye1.github.io/\">https://zhongye1.github.io/</a>, 专用笔记库:<a href=\"https://zhongye1.github.io/Arknight-notes/\">https://zhongye1.github.io/Arknight-notes/</a></p>\n"},{"title":"读原理图","date":"2025-09-15T16:11:50.000Z","cover":"/img/s007.jpg","_content":"# 硬件\n\n>study for schematic diagram\n\n## GPIO和门电路\n<!--![111](/syy.github.io/img/img.jpg) -->\n","source":"_posts/study-for-schematic-diagram.md","raw":"---\ntitle: 读原理图\ndate: 2025-09-16 00:11:50\ncover: /img/s007.jpg\ntags:\n- 嵌入式\n- 理论学习\n---\n# 硬件\n\n>study for schematic diagram\n\n## GPIO和门电路\n<!--![111](/syy.github.io/img/img.jpg) -->\n","slug":"study-for-schematic-diagram","published":1,"updated":"2025-09-16T07:34:10.748Z","comments":1,"layout":"post","photos":[],"_id":"cmfm8mmq600017cr8gxtm1zho","content":"<h1>硬件</h1>\n<blockquote>\n<p>study for schematic diagram</p>\n</blockquote>\n<h2 id=\"gpio和门电路\">GPIO和门电路</h2>\n<!--![111](/syy.github.io/img/img.jpg) -->\n","excerpt":"","more":"<h1>硬件</h1>\n<blockquote>\n<p>study for schematic diagram</p>\n</blockquote>\n<h2 id=\"gpio和门电路\">GPIO和门电路</h2>\n<!--![111](/syy.github.io/img/img.jpg) -->\n"},{"title":"freertos","date":"2025-09-11T15:18:55.000Z","cover":"/img/s003.jpg","katex":true,"_content":"\n# freertos002\n\n测试中\n\n## 1.硬件初始化\n\n为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数\n\n```c\n\n/***********************************************************************\n* @ 函数名  ： BSP_Init\n* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面\n* @ 参数    ：\n* @ 返回值  ： 无\n  *********************************************************************/\n  static void BSP_Init(void)\n  {\n  /*\n    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15\n    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，\n    * 都统一用这个优先级分组，千万不要再分组，切忌。\n      */\n      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );\n\n  /* LED 初始化 */\n  LED_GPIO_Config();\n\n  /* 串口初始化\t*/\n  USART_Config();\n\n}\n\n```\n\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: freertos\ndate: 2025-09-11 23:18:55\ncover: /img/s003.jpg\nkatex: true   # 启用公式渲染\ntags:\n  - 嵌入式\n  - 理论学习\n---\n\n# freertos002\n\n测试中\n\n## 1.硬件初始化\n\n为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数\n\n```c\n\n/***********************************************************************\n* @ 函数名  ： BSP_Init\n* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面\n* @ 参数    ：\n* @ 返回值  ： 无\n  *********************************************************************/\n  static void BSP_Init(void)\n  {\n  /*\n    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15\n    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，\n    * 都统一用这个优先级分组，千万不要再分组，切忌。\n      */\n      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );\n\n  /* LED 初始化 */\n  LED_GPIO_Config();\n\n  /* 串口初始化\t*/\n  USART_Config();\n\n}\n\n```\n\n\n\n","slug":"hello-world","published":1,"updated":"2025-09-12T16:10:13.199Z","comments":1,"layout":"post","photos":[],"_id":"cmfm8mmq800027cr882zlbpji","content":"<h1>freertos002</h1>\n<p>测试中</p>\n<h2 id=\"1-硬件初始化\">1.硬件初始化</h2>\n<p>为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***********************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">* @ 函数名  ： BSP_Init</span></span><br><span class=\"line\"><span class=\"comment\">* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面</span></span><br><span class=\"line\"><span class=\"comment\">* @ 参数    ：</span></span><br><span class=\"line\"><span class=\"comment\">* @ 返回值  ： 无</span></span><br><span class=\"line\"><span class=\"comment\">  *********************************************************************/</span></span><br><span class=\"line\">  <span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">BSP_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15</span></span><br><span class=\"line\"><span class=\"comment\">    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，</span></span><br><span class=\"line\"><span class=\"comment\">    * 都统一用这个优先级分组，千万不要再分组，切忌。</span></span><br><span class=\"line\"><span class=\"comment\">      */</span></span><br><span class=\"line\">      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* LED 初始化 */</span></span><br><span class=\"line\">  LED_GPIO_Config();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 串口初始化\t*/</span></span><br><span class=\"line\">  USART_Config();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1>freertos002</h1>\n<p>测试中</p>\n<h2 id=\"1-硬件初始化\">1.硬件初始化</h2>\n<p>为了方便以后统一管理板级外设的初始化，我们在 main.c 文件中创建一个 BSP_Init()函数， 专门用于存放板级外设初始化函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***********************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">* @ 函数名  ： BSP_Init</span></span><br><span class=\"line\"><span class=\"comment\">* @ 功能说明： 板级外设初始化，所有板子上的初始化均可放在这个函数里面</span></span><br><span class=\"line\"><span class=\"comment\">* @ 参数    ：</span></span><br><span class=\"line\"><span class=\"comment\">* @ 返回值  ： 无</span></span><br><span class=\"line\"><span class=\"comment\">  *********************************************************************/</span></span><br><span class=\"line\">  <span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">BSP_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    * STM32中断优先级分组为4，即4bit都用来表示抢占优先级，范围为：0~15</span></span><br><span class=\"line\"><span class=\"comment\">    * 优先级分组只需要分组一次即可，以后如果有其他的任务需要用到中断，</span></span><br><span class=\"line\"><span class=\"comment\">    * 都统一用这个优先级分组，千万不要再分组，切忌。</span></span><br><span class=\"line\"><span class=\"comment\">      */</span></span><br><span class=\"line\">      NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* LED 初始化 */</span></span><br><span class=\"line\">  LED_GPIO_Config();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 串口初始化\t*/</span></span><br><span class=\"line\">  USART_Config();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"信号与系统","date":"2025-09-08T15:18:55.000Z","cover":"/img/s002.jpg","math":true,"_content":"<!--\n![美女压图](/img/002.jpg)\n-->\n\n\n# 信号与系统001\n\n目前还是测试的,具体内容往后再看看;\n\n## 卷积\n\n### 卷积的性质\n\n- 1.分配律\n- 2.交换律\n- 3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积\n- 4.$\\( h(t+t_0) * x(t-t_0) = h(t) * x(t) \\)$\n- LTI 系统稳定的充要条件是\n  $$ \\int_{-\\infty}^{+\\infty} |h(t)| \\, dt < +\\infty $$\n  或\n  $$ \\sum_{k=-\\infty}^{+\\infty} |h[k]| < +\\infty $$\n\n### LTI系统的因果充要条件\n- h(t)=0,当t<0时,或者h[n]=0,当n<0时\n- 因果的定义：输出 $\\( y(t) \\)$在 $\\( t_0 \\) $时刻的 $\\( y(t_0) \\)$，只有$ \\( t \\leq t_0 \\) $时刻的 $\\( x(t) \\) $决定。\n---\n \n\n> 学习是一个持续的过程，每一小步都是进步。","source":"_posts/信号与系统.md","raw":"---\ntitle: 信号与系统\ndate: 2025-09-08 23:18:55\ncover: /img/s002.jpg\nmath: true   # 启用公式渲染\ntags: \n- 理论学习\n- 专业课\n---\n<!--\n![美女压图](/img/002.jpg)\n-->\n\n\n# 信号与系统001\n\n目前还是测试的,具体内容往后再看看;\n\n## 卷积\n\n### 卷积的性质\n\n- 1.分配律\n- 2.交换律\n- 3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积\n- 4.$\\( h(t+t_0) * x(t-t_0) = h(t) * x(t) \\)$\n- LTI 系统稳定的充要条件是\n  $$ \\int_{-\\infty}^{+\\infty} |h(t)| \\, dt < +\\infty $$\n  或\n  $$ \\sum_{k=-\\infty}^{+\\infty} |h[k]| < +\\infty $$\n\n### LTI系统的因果充要条件\n- h(t)=0,当t<0时,或者h[n]=0,当n<0时\n- 因果的定义：输出 $\\( y(t) \\)$在 $\\( t_0 \\) $时刻的 $\\( y(t_0) \\)$，只有$ \\( t \\leq t_0 \\) $时刻的 $\\( x(t) \\) $决定。\n---\n \n\n> 学习是一个持续的过程，每一小步都是进步。","slug":"信号与系统","published":1,"updated":"2025-09-12T16:10:13.201Z","comments":1,"layout":"post","photos":[],"_id":"cmfm8mmq900047cr8e7yics1p","content":"<!--\n![美女压图](/img/002.jpg)\n-->\n<h1>信号与系统001</h1>\n<p>目前还是测试的,具体内容往后再看看;</p>\n<h2 id=\"卷积\">卷积</h2>\n<h3 id=\"卷积的性质\">卷积的性质</h3>\n<ul>\n<li>1.分配律</li>\n<li>2.交换律</li>\n<li>3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积</li>\n<li>4.<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\\(&#039; in math mode at position 1: \\̲(̲ h(t+t_0) * x(t…'>\\( h(t+t_0) * x(t-t_0) = h(t) * x(t) \\)</span></li>\n<li>LTI 系统稳定的充要条件是<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></msubsup><mi mathvariant=\"normal\">∣</mi><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\int_{-\\infty}^{+\\infty} |h(t)| \\, dt &lt; +\\infty \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.491512em;vertical-align:-0.970281em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5212310000000002em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.970281em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">h</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span></span></p>\n或<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munderover><mi mathvariant=\"normal\">∣</mi><mi>h</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">∣</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{k=-\\infty}^{+\\infty} |h[k]| &lt; +\\infty \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.11878em;vertical-align:-1.360444em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7583360000000003em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.360444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">h</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span></span></p>\n</li>\n</ul>\n<h3 id=\"lti系统的因果充要条件\">LTI系统的因果充要条件</h3>\n<ul>\n<li>h(t)=0,当t&lt;0时,或者h[n]=0,当n&lt;0时</li>\n<li>因果的定义：输出 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\\(&#039; in math mode at position 1: \\̲(̲ y(t) \\)'>\\( y(t) \\)</span>在 $( t_0 ) $时刻的 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\\(&#039; in math mode at position 1: \\̲(̲ y(t_0) \\)'>\\( y(t_0) \\)</span>，只有$ ( t \\leq t_0 ) $时刻的 $( x(t) ) $决定。</li>\n</ul>\n<hr>\n<blockquote>\n<p>学习是一个持续的过程，每一小步都是进步。</p>\n</blockquote>\n","excerpt":"","more":"<!--\n![美女压图](/img/002.jpg)\n-->\n<h1>信号与系统001</h1>\n<p>目前还是测试的,具体内容往后再看看;</p>\n<h2 id=\"卷积\">卷积</h2>\n<h3 id=\"卷积的性质\">卷积的性质</h3>\n<ul>\n<li>1.分配律</li>\n<li>2.交换律</li>\n<li>3.两个信号卷积后的微分，等于其中一个信号的微分与另一个信号的卷积</li>\n<li>4.<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\\(&#039; in math mode at position 1: \\̲(̲ h(t+t_0) * x(t…'>\\( h(t+t_0) * x(t-t_0) = h(t) * x(t) \\)</span></li>\n<li>LTI 系统稳定的充要条件是<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></msubsup><mi mathvariant=\"normal\">∣</mi><mi>h</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\int_{-\\infty}^{+\\infty} |h(t)| \\, dt &lt; +\\infty \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.491512em;vertical-align:-0.970281em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5212310000000002em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.8129000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.970281em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">h</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span></span></p>\n或<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munderover><mi mathvariant=\"normal\">∣</mi><mi>h</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">∣</mi><mo>&lt;</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{k=-\\infty}^{+\\infty} |h[k]| &lt; +\\infty \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.11878em;vertical-align:-1.360444em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7583360000000003em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.360444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">h</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span></span></p>\n</li>\n</ul>\n<h3 id=\"lti系统的因果充要条件\">LTI系统的因果充要条件</h3>\n<ul>\n<li>h(t)=0,当t&lt;0时,或者h[n]=0,当n&lt;0时</li>\n<li>因果的定义：输出 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\\(&#039; in math mode at position 1: \\̲(̲ y(t) \\)'>\\( y(t) \\)</span>在 $( t_0 ) $时刻的 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\\(&#039; in math mode at position 1: \\̲(̲ y(t_0) \\)'>\\( y(t_0) \\)</span>，只有$ ( t \\leq t_0 ) $时刻的 $( x(t) ) $决定。</li>\n</ul>\n<hr>\n<blockquote>\n<p>学习是一个持续的过程，每一小步都是进步。</p>\n</blockquote>\n"},{"title":"植物大战僵尸制作","date":"2025-09-12T10:41:26.000Z","cover":"/img/s004.jpg","_content":"\n# 植物大战僵尸\n\n目前打算先用cpp实现在电脑,再移植到stm32f407(lvgl,freertos)[还在实现中]\n\n## cpp实现植物大战僵尸(1.2)\n目前已经实现僵尸\n\n### 视频\nhttps://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca\n\n### cpp实现思路\n\n- 1.图片卡牌等静止的加载:依据计算出的图片位置的坐标,利用putimage或putimagePNG函数绘制实现;\n- 2.植物生长动画图片实现:在updateGame函数中，根据时间间隔更新植物动画帧。每次更新时，植物的frameIndex递增，若超出图片序列范围则重置为 0 ;\n- 3.阳光产生:通过rand()时间随机生成,在草坪的随机位置;其次,制作一个阳光数组,循环利用,而不是频繁生成并删除;\n- 4.收集阳光:定义初始的阳光值,确定植物的else,怎么判断阳光位置:;(1.1)\n- 5.僵尸实现:类似于阳光\n\n### cpp代码实现(1.0)\n```cpp\n#define _CRT_SECURE_NO_WARNINGS  \n#include<stdio.h>\n#include<graphics.h>//引用图形库头文件\n#include <Windows.h>\n#include <conio.h>\n#include <time.h>\n#include\"tools.h\" \n\n#define WIN_WIDTH 900 //游戏窗口宽度\n#define WIN_HEIGHT 600 //游戏窗口高度\n\nenum {WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT};\n\nIMAGE imgBg; //表示背景图片\nIMAGE imgBar; //表示游戏中的任务栏\nIMAGE imgCards[ZHI_WU_COUNT];\nIMAGE* imgZhiWu[ZHI_WU_COUNT][20]; //表示植物图片\n\nint curX, curY; //表示当前鼠标的坐标\nint curZhiWu = 0; //表示当前选中的植物 0未选中,1豌豆射手,2向日葵\n\nstruct zhiwu{\n\tint type; //0:没有植物;1:有植物;\n\tint frameIndex; //当前播放到第几帧\n};\n\nstruct zhiwu map[3][9]; //表示游戏中的植物\n\nstruct sunshineBall {\n\tint x, y; //阳光的坐标 \n\tint frameIndex; //当前播放到第几帧\n\tint destY; //阳光掉落的目标y坐标\n\tint used; //是否被使用 0:未使用 1:已使用 \n}; \n\n//10个阳光球(循环出现)\nstruct sunshineBall balls[10];\nIMAGE imgSunshineBall[29]; //阳光图片\n\nbool fileExist(const char* name) {\n\tFILE* fp = fopen(name, \"r\");\n\tif(fp == NULL) {\n\t\treturn false;\n\t}\n\telse {\n\t\tfclose(fp);\n\t\treturn true;\n\t}\n}\n\nvoid gameInit()\n{\n\t//加载游戏背景\n\tloadimage(&imgBg, _T(\"res/bg.jpg\")); //加载背景图片\n\tloadimage(&imgBar, _T(\"res/bar5.png\")); //加载矩形条图片\n\n\tmemset(imgZhiWu, 0, sizeof(imgZhiWu)); //将植物图片数组清零\n\tmemset(map, 0, sizeof(map)); //将植物地图清零\n\n\t//初始化植物卡牌\n\tchar name[64];\n\tfor (int i =  0;i < ZHI_WU_COUNT; i++)\n\t{\n\t\t//生成植物卡牌的文件名\n\t\twchar_t wname[64];\n\t\t// 2. 生成窄字符路径（原逻辑不变）\n\t\tsprintf_s(name, sizeof(name), \"res/Cards/card_%d.png\", i + 1);\n\t\t// 3. 转换窄字符到宽字符（需要包含 Windows.h）\n\t\tMultiByteToWideChar(CP_ACP, 0, name, -1, wname, 64);\n\t\t// 4. 传入宽字符路径\n\t\tloadimage(&imgCards[i], wname);\n\n\t\tfor(int j = 0; j < 20; j++){\n\t\t\tsprintf_s(name, sizeof(name), \"res/ZhiWu/%d/%d.png\", i , j+1);\n\t\t\tMultiByteToWideChar(CP_ACP, 0, name, -1, wname, 64);\n\t\t\t//imgZhiWu[i][j] = new IMAGE;\n\t\t\t//判断文件是否存在 \n\t\t\tif (fileExist(name)) {\n\t\t\t\timgZhiWu[i][j] = new IMAGE;\n\t\t\t\tloadimage(imgZhiWu[i][j], wname);\n\t\t\t}else{\n\t\t\t\timgZhiWu[i][j] = NULL;\n\t\t\t\tbreak; //文件不存在，跳出循环\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\n\tmemset(balls, 0, sizeof(balls)); //将阳光球数组清零\n\t// 修复思路：loadimage函数需要第二个参数为LPCTSTR类型（即TCHAR*），而你的代码传入的是char*类型。\n\t// 解决方法：将name（char数组）转换为wchar_t（宽字符数组），并传入。\n\tfor (int i = 0; i < 29; i++) {\n\t\tsprintf_s(name, sizeof(name), \"res/sunshine/%d.png\", i + 1);\n\t\twchar_t wname[64];\n\t\tMultiByteToWideChar(CP_ACP, 0, name, -1, wname, 64);\n\t\tloadimage(&imgSunshineBall[i], wname);\n\t}\n\n\t//配置随机种子\n\tsrand(time(NULL));\n\n\t//创建游戏窗口:\n\tinitgraph(WIN_WIDTH, WIN_HEIGHT, 1); //创建800*600的窗口，显示控制台，禁止关闭和最小化\n\t\n\t//关闭图形窗口\n\t//closegraph();\n}\n\nvoid updateWindow()\n{\n\tBeginBatchDraw(); //开始批量绘图，防止闪烁(双缓冲\n\t//绘制背景图片\n\tputimage(0, 0, &imgBg); //将背景图片绘制到窗口的(0,0)位置\n\tputimagePNG(250, 0, &imgBar); //将任务栏图片绘制到窗口底部\n\n\tfor (int i = 0; i < ZHI_WU_COUNT; i++)\n\t{\n\t\tint x = 338 + i * 65; //计算每张卡牌的x坐标\n\t\tint y = 6; //卡牌的y坐标固定为6\n\t\tputimage(x, y, &imgCards[i]); //将植物卡牌绘制到任务栏上\n\t\t//putimagePNG(50 + i * 80, 10, &imgCards[i]); //将植物卡牌绘制到任务栏上\n\t}\n\n\t//渲染拖动窗口\n\tif (curZhiWu > 0) {\n\t\tIMAGE* img = imgZhiWu[curZhiWu - 1][0];\n\t\tputimagePNG(curX - img->getwidth()/2, curY -img->getheight()/2, img);\n\t\t//putimagePNG(curX , curY , img);\n\t}\n\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tif (map[i][j].type > 0) {\n\t\t\t\tint x = 256 + j * 81;\n\t\t\t\tint y = 179 + i * 102+10;\n\t\t\t\tint zhiwutype = map[i][j].type-1;\n\t\t\t\tint index = map[i][j].frameIndex;\n\t\t\t\t//putimagePNG(curX , curY , img);\n\t\t\t\tif (imgZhiWu[zhiwutype][index] != NULL) {\n\t\t\t\t\tputimagePNG(x, y, imgZhiWu[zhiwutype][index]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//刷新图形窗口\n\t//FlushBatchDraw(); //刷新图形窗口，显示所有绘制的内容\n\tEndBatchDraw(); //结束批量绘图，显示所有绘制的内容\n\n}\n\n//用户的点击事件\nvoid userClick(){\n\tExMessage msg; //专门用来存储图形窗口中发生的消息\n\tstatic int status = 0; //用来表示当前的状态，0表示没有点击任何卡牌，1表示点击了某张卡牌\n\n\t//peekmessage(); //处理鼠标消息\n\tif(peekmessage(&msg)){\n\t\tif (msg.message == WM_LBUTTONDOWN) { //左键按下\n\t\t\tif(msg.x> 338 && msg.x < 338 + 65 * ZHI_WU_COUNT && msg.y > 6 && msg.y < 96){\n\t\t\t\tint index = (msg.x - 338) / 65; //计算用户点击的是第几张卡牌\n\t\t\t\tstatus = 1; //表示用户点击了某张卡牌\n\t\t\t\tcurZhiWu = index + 1; //记录当前选中的植物\n\t\t\t}\n\t\t}\n\t\telse if (msg.message == WM_MOUSEMOVE && status == 1) { //鼠标移动\n\t\t\tcurX = msg.x;\n\t\t\tcurY = msg.y;\n\n\t\t}\n\t\telse if (msg.message == WM_LBUTTONUP) { //鼠标左键抬起\n\t\t\tif (msg.x > 256 && msg.y > 179 && msg.y < 489) {\n\t\t\t\tint row = (msg.y - 179) / 102; //计算用户松开鼠标时，植物应该种植在哪一行\n\t\t\t\tint col = (msg.x - 256) / 81; //计算用户松开鼠标时，植物应该种植在哪一列\n\n\t\t\t\tif (map[row][col].type == 0) {\n\t\t\t\t\tmap[row][col].type = curZhiWu;\n\t\t\t\t\tmap[row][col].frameIndex;\n\n\t\t\t\t}\n\t\t\t\t//status = 0; // 重置“拖动状态”\n\t\t\t\t//curZhiWu = 0; // 重置“选中植物”（后续可改为“判断种植后再重置”\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n}\n\nvoid createSunshine() {\n\tstatic int count = 0;\n\tstatic int frc = 400;\n\tcount++;\n\tif (count >= frc) {\n\t\tfrc = 200 + rand() % 200;\n\t\tcount = 0;\n\n\t\t//从阳光球数组中找一个未使用的阳光球\n\t\tint ballMax = sizeof(balls) / sizeof(balls[0]);\n\t\tint i;\n\t\tfor (i = 0; i < ballMax && balls[i].used; i++);\n\t\tif (i >= ballMax) return;\n\n\t\tballs[i].used = true;\n\t\tballs[i].frameIndex = 0;\n\t\tballs[i].x = 260 + rand() % (900 - 260);\n\t\tballs[i].y = 60;\n\t\tballs[i].destY = 200 + (rand() % 4) * 90; //\n\t}\n\n}\n\n//改变游戏的状态\nvoid updateGame(){\n\t// 1. 静态变量记录上一次更新动画的时间（只初始化一次）\n\tstatic DWORD lastAnimTime = 0;\n\t// 2. 当前时间（毫秒）\n\tDWORD now = GetTickCount();\n\t// 3. 动画更新间隔：100毫秒（可调整，值越大动画越慢）\n\tconst int ANIM_INTERVAL = 100;\n\n\n\t// 只有当时间间隔超过100毫秒，才更新动画帧\n\tif (now - lastAnimTime >= ANIM_INTERVAL) {\n\t\t// 更新植物的动画（原逻辑不变，只是包在时间判断里）\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tif (map[i][j].type > 0) {\n\t\t\t\t\tint zhiwutype = map[i][j].type - 1;\n\t\t\t\t\t// 修复：原代码判断的是“更新前的帧”，这里改成“更新后的帧”\n\t\t\t\t\tmap[i][j].frameIndex++;\n\t\t\t\t\t// 检查下一帧是否存在，不存在则重置为0\n\t\t\t\t\tif (imgZhiWu[zhiwutype][map[i][j].frameIndex] == NULL) {\n\t\t\t\t\t\tmap[i][j].frameIndex = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 4. 更新“上一次动画时间”，为下次判断做准备\n\t\tlastAnimTime = now;\n\t}\n\tcreateSunshine();//创建阳光iu\n}\nvoid startUI(){\n\tIMAGE imgBg,imgMenu1, imgMenu2;\n\tloadimage(&imgBg, _T(\"res/menu.png\"));\n\tloadimage(&imgMenu1, _T(\"res/menu1.png\"));\n\tloadimage(&imgMenu2, _T(\"res/menu2.png\"));\n\n\tint flag = 0;\n\n\twhile (1){\n\t\tBeginBatchDraw(); //开始批量绘图，防止闪烁(双缓冲\n\t\tputimage(0, 0, &imgBg); //将背景图片绘制到窗口的(0,0)位置\n\t\tputimagePNG(474, 75, flag ? &imgMenu2 : &imgMenu1);\n\t\tEndBatchDraw(); //结束批量绘图，显示所有绘制的内容 \n\n\t\tExMessage msg; //专门用来存储图形窗口中发生的消息\n\t\tif(peekmessage(&msg)){\n\t\t\tif (msg.message == WM_MOUSEMOVE) { //鼠标移动\n\t\t\t\tif (msg.x > 474 && msg.x < 474 + 300 && msg.y > 75 && msg.y < 75 + 100) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tflag = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (msg.message == WM_LBUTTONDOWN) { //左键按下\n\t\t\t\tif (msg.x > 474 && msg.x < 474 + 300 && msg.y > 75 && msg.y < 75 + 100) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nint main(){\n\tgameInit();\n\n\tstartUI();\n\n\tint timer = 0;\n\tint flag = true;\n\n\twhile (1) {\n\t\tuserClick();\n\t\ttimer += getDelay();\n\n\t\tupdateGame();\n\t\tupdateWindow();\n\n\t\t// 新增：用定时器控制帧率（16毫秒≈60FPS，不阻塞输入）\n\t\tstatic DWORD lastFrameTime = 0;\n\t\tDWORD now = GetTickCount();\n\t\tif (now - lastFrameTime < 16) {  // 确保每帧至少间隔16毫秒\n\t\t\tSleep(now - lastFrameTime);  // 只在“帧太快”时轻微延时，不阻塞输入\n\t\t}\n\t\tlastFrameTime = now;\n\n\t\t\n\t}\n\t\n\n\tsystem(\"pause\"); //等待用户按任意键\n\treturn 0;\n}\n\n\n```\n","source":"_posts/植物大战僵尸制作.md","raw":"---\ntitle: 植物大战僵尸制作\ndate: 2025-09-12 18:41:26\ncover: /img/s004.jpg\ntags:\n- 嵌入式\n- lvgl\n- freertos\n- 游戏\n---\n\n# 植物大战僵尸\n\n目前打算先用cpp实现在电脑,再移植到stm32f407(lvgl,freertos)[还在实现中]\n\n## cpp实现植物大战僵尸(1.2)\n目前已经实现僵尸\n\n### 视频\nhttps://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca\n\n### cpp实现思路\n\n- 1.图片卡牌等静止的加载:依据计算出的图片位置的坐标,利用putimage或putimagePNG函数绘制实现;\n- 2.植物生长动画图片实现:在updateGame函数中，根据时间间隔更新植物动画帧。每次更新时，植物的frameIndex递增，若超出图片序列范围则重置为 0 ;\n- 3.阳光产生:通过rand()时间随机生成,在草坪的随机位置;其次,制作一个阳光数组,循环利用,而不是频繁生成并删除;\n- 4.收集阳光:定义初始的阳光值,确定植物的else,怎么判断阳光位置:;(1.1)\n- 5.僵尸实现:类似于阳光\n\n### cpp代码实现(1.0)\n```cpp\n#define _CRT_SECURE_NO_WARNINGS  \n#include<stdio.h>\n#include<graphics.h>//引用图形库头文件\n#include <Windows.h>\n#include <conio.h>\n#include <time.h>\n#include\"tools.h\" \n\n#define WIN_WIDTH 900 //游戏窗口宽度\n#define WIN_HEIGHT 600 //游戏窗口高度\n\nenum {WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT};\n\nIMAGE imgBg; //表示背景图片\nIMAGE imgBar; //表示游戏中的任务栏\nIMAGE imgCards[ZHI_WU_COUNT];\nIMAGE* imgZhiWu[ZHI_WU_COUNT][20]; //表示植物图片\n\nint curX, curY; //表示当前鼠标的坐标\nint curZhiWu = 0; //表示当前选中的植物 0未选中,1豌豆射手,2向日葵\n\nstruct zhiwu{\n\tint type; //0:没有植物;1:有植物;\n\tint frameIndex; //当前播放到第几帧\n};\n\nstruct zhiwu map[3][9]; //表示游戏中的植物\n\nstruct sunshineBall {\n\tint x, y; //阳光的坐标 \n\tint frameIndex; //当前播放到第几帧\n\tint destY; //阳光掉落的目标y坐标\n\tint used; //是否被使用 0:未使用 1:已使用 \n}; \n\n//10个阳光球(循环出现)\nstruct sunshineBall balls[10];\nIMAGE imgSunshineBall[29]; //阳光图片\n\nbool fileExist(const char* name) {\n\tFILE* fp = fopen(name, \"r\");\n\tif(fp == NULL) {\n\t\treturn false;\n\t}\n\telse {\n\t\tfclose(fp);\n\t\treturn true;\n\t}\n}\n\nvoid gameInit()\n{\n\t//加载游戏背景\n\tloadimage(&imgBg, _T(\"res/bg.jpg\")); //加载背景图片\n\tloadimage(&imgBar, _T(\"res/bar5.png\")); //加载矩形条图片\n\n\tmemset(imgZhiWu, 0, sizeof(imgZhiWu)); //将植物图片数组清零\n\tmemset(map, 0, sizeof(map)); //将植物地图清零\n\n\t//初始化植物卡牌\n\tchar name[64];\n\tfor (int i =  0;i < ZHI_WU_COUNT; i++)\n\t{\n\t\t//生成植物卡牌的文件名\n\t\twchar_t wname[64];\n\t\t// 2. 生成窄字符路径（原逻辑不变）\n\t\tsprintf_s(name, sizeof(name), \"res/Cards/card_%d.png\", i + 1);\n\t\t// 3. 转换窄字符到宽字符（需要包含 Windows.h）\n\t\tMultiByteToWideChar(CP_ACP, 0, name, -1, wname, 64);\n\t\t// 4. 传入宽字符路径\n\t\tloadimage(&imgCards[i], wname);\n\n\t\tfor(int j = 0; j < 20; j++){\n\t\t\tsprintf_s(name, sizeof(name), \"res/ZhiWu/%d/%d.png\", i , j+1);\n\t\t\tMultiByteToWideChar(CP_ACP, 0, name, -1, wname, 64);\n\t\t\t//imgZhiWu[i][j] = new IMAGE;\n\t\t\t//判断文件是否存在 \n\t\t\tif (fileExist(name)) {\n\t\t\t\timgZhiWu[i][j] = new IMAGE;\n\t\t\t\tloadimage(imgZhiWu[i][j], wname);\n\t\t\t}else{\n\t\t\t\timgZhiWu[i][j] = NULL;\n\t\t\t\tbreak; //文件不存在，跳出循环\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\n\tmemset(balls, 0, sizeof(balls)); //将阳光球数组清零\n\t// 修复思路：loadimage函数需要第二个参数为LPCTSTR类型（即TCHAR*），而你的代码传入的是char*类型。\n\t// 解决方法：将name（char数组）转换为wchar_t（宽字符数组），并传入。\n\tfor (int i = 0; i < 29; i++) {\n\t\tsprintf_s(name, sizeof(name), \"res/sunshine/%d.png\", i + 1);\n\t\twchar_t wname[64];\n\t\tMultiByteToWideChar(CP_ACP, 0, name, -1, wname, 64);\n\t\tloadimage(&imgSunshineBall[i], wname);\n\t}\n\n\t//配置随机种子\n\tsrand(time(NULL));\n\n\t//创建游戏窗口:\n\tinitgraph(WIN_WIDTH, WIN_HEIGHT, 1); //创建800*600的窗口，显示控制台，禁止关闭和最小化\n\t\n\t//关闭图形窗口\n\t//closegraph();\n}\n\nvoid updateWindow()\n{\n\tBeginBatchDraw(); //开始批量绘图，防止闪烁(双缓冲\n\t//绘制背景图片\n\tputimage(0, 0, &imgBg); //将背景图片绘制到窗口的(0,0)位置\n\tputimagePNG(250, 0, &imgBar); //将任务栏图片绘制到窗口底部\n\n\tfor (int i = 0; i < ZHI_WU_COUNT; i++)\n\t{\n\t\tint x = 338 + i * 65; //计算每张卡牌的x坐标\n\t\tint y = 6; //卡牌的y坐标固定为6\n\t\tputimage(x, y, &imgCards[i]); //将植物卡牌绘制到任务栏上\n\t\t//putimagePNG(50 + i * 80, 10, &imgCards[i]); //将植物卡牌绘制到任务栏上\n\t}\n\n\t//渲染拖动窗口\n\tif (curZhiWu > 0) {\n\t\tIMAGE* img = imgZhiWu[curZhiWu - 1][0];\n\t\tputimagePNG(curX - img->getwidth()/2, curY -img->getheight()/2, img);\n\t\t//putimagePNG(curX , curY , img);\n\t}\n\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 9; j++) {\n\t\t\tif (map[i][j].type > 0) {\n\t\t\t\tint x = 256 + j * 81;\n\t\t\t\tint y = 179 + i * 102+10;\n\t\t\t\tint zhiwutype = map[i][j].type-1;\n\t\t\t\tint index = map[i][j].frameIndex;\n\t\t\t\t//putimagePNG(curX , curY , img);\n\t\t\t\tif (imgZhiWu[zhiwutype][index] != NULL) {\n\t\t\t\t\tputimagePNG(x, y, imgZhiWu[zhiwutype][index]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//刷新图形窗口\n\t//FlushBatchDraw(); //刷新图形窗口，显示所有绘制的内容\n\tEndBatchDraw(); //结束批量绘图，显示所有绘制的内容\n\n}\n\n//用户的点击事件\nvoid userClick(){\n\tExMessage msg; //专门用来存储图形窗口中发生的消息\n\tstatic int status = 0; //用来表示当前的状态，0表示没有点击任何卡牌，1表示点击了某张卡牌\n\n\t//peekmessage(); //处理鼠标消息\n\tif(peekmessage(&msg)){\n\t\tif (msg.message == WM_LBUTTONDOWN) { //左键按下\n\t\t\tif(msg.x> 338 && msg.x < 338 + 65 * ZHI_WU_COUNT && msg.y > 6 && msg.y < 96){\n\t\t\t\tint index = (msg.x - 338) / 65; //计算用户点击的是第几张卡牌\n\t\t\t\tstatus = 1; //表示用户点击了某张卡牌\n\t\t\t\tcurZhiWu = index + 1; //记录当前选中的植物\n\t\t\t}\n\t\t}\n\t\telse if (msg.message == WM_MOUSEMOVE && status == 1) { //鼠标移动\n\t\t\tcurX = msg.x;\n\t\t\tcurY = msg.y;\n\n\t\t}\n\t\telse if (msg.message == WM_LBUTTONUP) { //鼠标左键抬起\n\t\t\tif (msg.x > 256 && msg.y > 179 && msg.y < 489) {\n\t\t\t\tint row = (msg.y - 179) / 102; //计算用户松开鼠标时，植物应该种植在哪一行\n\t\t\t\tint col = (msg.x - 256) / 81; //计算用户松开鼠标时，植物应该种植在哪一列\n\n\t\t\t\tif (map[row][col].type == 0) {\n\t\t\t\t\tmap[row][col].type = curZhiWu;\n\t\t\t\t\tmap[row][col].frameIndex;\n\n\t\t\t\t}\n\t\t\t\t//status = 0; // 重置“拖动状态”\n\t\t\t\t//curZhiWu = 0; // 重置“选中植物”（后续可改为“判断种植后再重置”\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n}\n\nvoid createSunshine() {\n\tstatic int count = 0;\n\tstatic int frc = 400;\n\tcount++;\n\tif (count >= frc) {\n\t\tfrc = 200 + rand() % 200;\n\t\tcount = 0;\n\n\t\t//从阳光球数组中找一个未使用的阳光球\n\t\tint ballMax = sizeof(balls) / sizeof(balls[0]);\n\t\tint i;\n\t\tfor (i = 0; i < ballMax && balls[i].used; i++);\n\t\tif (i >= ballMax) return;\n\n\t\tballs[i].used = true;\n\t\tballs[i].frameIndex = 0;\n\t\tballs[i].x = 260 + rand() % (900 - 260);\n\t\tballs[i].y = 60;\n\t\tballs[i].destY = 200 + (rand() % 4) * 90; //\n\t}\n\n}\n\n//改变游戏的状态\nvoid updateGame(){\n\t// 1. 静态变量记录上一次更新动画的时间（只初始化一次）\n\tstatic DWORD lastAnimTime = 0;\n\t// 2. 当前时间（毫秒）\n\tDWORD now = GetTickCount();\n\t// 3. 动画更新间隔：100毫秒（可调整，值越大动画越慢）\n\tconst int ANIM_INTERVAL = 100;\n\n\n\t// 只有当时间间隔超过100毫秒，才更新动画帧\n\tif (now - lastAnimTime >= ANIM_INTERVAL) {\n\t\t// 更新植物的动画（原逻辑不变，只是包在时间判断里）\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tfor (int j = 0; j < 9; j++) {\n\t\t\t\tif (map[i][j].type > 0) {\n\t\t\t\t\tint zhiwutype = map[i][j].type - 1;\n\t\t\t\t\t// 修复：原代码判断的是“更新前的帧”，这里改成“更新后的帧”\n\t\t\t\t\tmap[i][j].frameIndex++;\n\t\t\t\t\t// 检查下一帧是否存在，不存在则重置为0\n\t\t\t\t\tif (imgZhiWu[zhiwutype][map[i][j].frameIndex] == NULL) {\n\t\t\t\t\t\tmap[i][j].frameIndex = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 4. 更新“上一次动画时间”，为下次判断做准备\n\t\tlastAnimTime = now;\n\t}\n\tcreateSunshine();//创建阳光iu\n}\nvoid startUI(){\n\tIMAGE imgBg,imgMenu1, imgMenu2;\n\tloadimage(&imgBg, _T(\"res/menu.png\"));\n\tloadimage(&imgMenu1, _T(\"res/menu1.png\"));\n\tloadimage(&imgMenu2, _T(\"res/menu2.png\"));\n\n\tint flag = 0;\n\n\twhile (1){\n\t\tBeginBatchDraw(); //开始批量绘图，防止闪烁(双缓冲\n\t\tputimage(0, 0, &imgBg); //将背景图片绘制到窗口的(0,0)位置\n\t\tputimagePNG(474, 75, flag ? &imgMenu2 : &imgMenu1);\n\t\tEndBatchDraw(); //结束批量绘图，显示所有绘制的内容 \n\n\t\tExMessage msg; //专门用来存储图形窗口中发生的消息\n\t\tif(peekmessage(&msg)){\n\t\t\tif (msg.message == WM_MOUSEMOVE) { //鼠标移动\n\t\t\t\tif (msg.x > 474 && msg.x < 474 + 300 && msg.y > 75 && msg.y < 75 + 100) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tflag = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (msg.message == WM_LBUTTONDOWN) { //左键按下\n\t\t\t\tif (msg.x > 474 && msg.x < 474 + 300 && msg.y > 75 && msg.y < 75 + 100) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nint main(){\n\tgameInit();\n\n\tstartUI();\n\n\tint timer = 0;\n\tint flag = true;\n\n\twhile (1) {\n\t\tuserClick();\n\t\ttimer += getDelay();\n\n\t\tupdateGame();\n\t\tupdateWindow();\n\n\t\t// 新增：用定时器控制帧率（16毫秒≈60FPS，不阻塞输入）\n\t\tstatic DWORD lastFrameTime = 0;\n\t\tDWORD now = GetTickCount();\n\t\tif (now - lastFrameTime < 16) {  // 确保每帧至少间隔16毫秒\n\t\t\tSleep(now - lastFrameTime);  // 只在“帧太快”时轻微延时，不阻塞输入\n\t\t}\n\t\tlastFrameTime = now;\n\n\t\t\n\t}\n\t\n\n\tsystem(\"pause\"); //等待用户按任意键\n\treturn 0;\n}\n\n\n```\n","slug":"植物大战僵尸制作","published":1,"updated":"2025-09-15T16:12:23.030Z","comments":1,"layout":"post","photos":[],"_id":"cmfm8mmqa00057cr8fq5k2ktk","content":"<h1>植物大战僵尸</h1>\n<p>目前打算先用cpp实现在电脑,再移植到stm32f407(lvgl,freertos)[还在实现中]</p>\n<h2 id=\"cpp实现植物大战僵尸-1-2\">cpp实现植物大战僵尸(1.2)</h2>\n<p>目前已经实现僵尸</p>\n<h3 id=\"视频\">视频</h3>\n<p><a href=\"https://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca\">https://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca</a></p>\n<h3 id=\"cpp实现思路\">cpp实现思路</h3>\n<ul>\n<li>1.图片卡牌等静止的加载:依据计算出的图片位置的坐标,利用putimage或putimagePNG函数绘制实现;</li>\n<li>2.植物生长动画图片实现:在updateGame函数中，根据时间间隔更新植物动画帧。每次更新时，植物的frameIndex递增，若超出图片序列范围则重置为 0 ;</li>\n<li>3.阳光产生:通过rand()时间随机生成,在草坪的随机位置;其次,制作一个阳光数组,循环利用,而不是频繁生成并删除;</li>\n<li>4.收集阳光:定义初始的阳光值,确定植物的else,怎么判断阳光位置:;(1.1)</li>\n<li>5.僵尸实现:类似于阳光</li>\n</ul>\n<h3 id=\"cpp代码实现-1-0\">cpp代码实现(1.0)</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _CRT_SECURE_NO_WARNINGS  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;graphics.h&gt;</span><span class=\"comment\">//引用图形库头文件</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;conio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;tools.h&quot;</span> </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIN_WIDTH 900 <span class=\"comment\">//游戏窗口宽度</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIN_HEIGHT 600 <span class=\"comment\">//游戏窗口高度</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> &#123;WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">IMAGE imgBg; <span class=\"comment\">//表示背景图片</span></span><br><span class=\"line\">IMAGE imgBar; <span class=\"comment\">//表示游戏中的任务栏</span></span><br><span class=\"line\">IMAGE imgCards[ZHI_WU_COUNT];</span><br><span class=\"line\">IMAGE* imgZhiWu[ZHI_WU_COUNT][<span class=\"number\">20</span>]; <span class=\"comment\">//表示植物图片</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> curX, curY; <span class=\"comment\">//表示当前鼠标的坐标</span></span><br><span class=\"line\"><span class=\"type\">int</span> curZhiWu = <span class=\"number\">0</span>; <span class=\"comment\">//表示当前选中的植物 0未选中,1豌豆射手,2向日葵</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">zhiwu</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> type; <span class=\"comment\">//0:没有植物;1:有植物;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//当前播放到第几帧</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">zhiwu</span> map[<span class=\"number\">3</span>][<span class=\"number\">9</span>]; <span class=\"comment\">//表示游戏中的植物</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">sunshineBall</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> x, y; <span class=\"comment\">//阳光的坐标 </span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//当前播放到第几帧</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> destY; <span class=\"comment\">//阳光掉落的目标y坐标</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> used; <span class=\"comment\">//是否被使用 0:未使用 1:已使用 </span></span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//10个阳光球(循环出现)</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">sunshineBall</span> balls[<span class=\"number\">10</span>];</span><br><span class=\"line\">IMAGE imgSunshineBall[<span class=\"number\">29</span>]; <span class=\"comment\">//阳光图片</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">fileExist</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span> </span>&#123;</span><br><span class=\"line\">\tFILE* fp = <span class=\"built_in\">fopen</span>(name, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(fp == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">fclose</span>(fp);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gameInit</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//加载游戏背景</span></span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgBg, _T(<span class=\"string\">&quot;res/bg.jpg&quot;</span>)); <span class=\"comment\">//加载背景图片</span></span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgBar, _T(<span class=\"string\">&quot;res/bar5.png&quot;</span>)); <span class=\"comment\">//加载矩形条图片</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(imgZhiWu, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(imgZhiWu)); <span class=\"comment\">//将植物图片数组清零</span></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(map, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(map)); <span class=\"comment\">//将植物地图清零</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//初始化植物卡牌</span></span><br><span class=\"line\">\t<span class=\"type\">char</span> name[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i =  <span class=\"number\">0</span>;i &lt; ZHI_WU_COUNT; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成植物卡牌的文件名</span></span><br><span class=\"line\">\t\t<span class=\"type\">wchar_t</span> wname[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t\t<span class=\"comment\">// 2. 生成窄字符路径（原逻辑不变）</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">sprintf_s</span>(name, <span class=\"built_in\">sizeof</span>(name), <span class=\"string\">&quot;res/Cards/card_%d.png&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 3. 转换窄字符到宽字符（需要包含 Windows.h）</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, name, <span class=\"number\">-1</span>, wname, <span class=\"number\">64</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 4. 传入宽字符路径</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">loadimage</span>(&amp;imgCards[i], wname);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">20</span>; j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">sprintf_s</span>(name, <span class=\"built_in\">sizeof</span>(name), <span class=\"string\">&quot;res/ZhiWu/%d/%d.png&quot;</span>, i , j<span class=\"number\">+1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, name, <span class=\"number\">-1</span>, wname, <span class=\"number\">64</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//imgZhiWu[i][j] = new IMAGE;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断文件是否存在 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">fileExist</span>(name)) &#123;</span><br><span class=\"line\">\t\t\t\timgZhiWu[i][j] = <span class=\"keyword\">new</span> IMAGE;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">loadimage</span>(imgZhiWu[i][j], wname);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\timgZhiWu[i][j] = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>; <span class=\"comment\">//文件不存在，跳出循环</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(balls, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(balls)); <span class=\"comment\">//将阳光球数组清零</span></span><br><span class=\"line\">\t<span class=\"comment\">// 修复思路：loadimage函数需要第二个参数为LPCTSTR类型（即TCHAR*），而你的代码传入的是char*类型。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 解决方法：将name（char数组）转换为wchar_t（宽字符数组），并传入。</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">29</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sprintf_s</span>(name, <span class=\"built_in\">sizeof</span>(name), <span class=\"string\">&quot;res/sunshine/%d.png&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">wchar_t</span> wname[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, name, <span class=\"number\">-1</span>, wname, <span class=\"number\">64</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">loadimage</span>(&amp;imgSunshineBall[i], wname);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//配置随机种子</span></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建游戏窗口:</span></span><br><span class=\"line\">\t<span class=\"built_in\">initgraph</span>(WIN_WIDTH, WIN_HEIGHT, <span class=\"number\">1</span>); <span class=\"comment\">//创建800*600的窗口，显示控制台，禁止关闭和最小化</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//关闭图形窗口</span></span><br><span class=\"line\">\t<span class=\"comment\">//closegraph();</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">updateWindow</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">BeginBatchDraw</span>(); <span class=\"comment\">//开始批量绘图，防止闪烁(双缓冲</span></span><br><span class=\"line\">\t<span class=\"comment\">//绘制背景图片</span></span><br><span class=\"line\">\t<span class=\"built_in\">putimage</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;imgBg); <span class=\"comment\">//将背景图片绘制到窗口的(0,0)位置</span></span><br><span class=\"line\">\t<span class=\"built_in\">putimagePNG</span>(<span class=\"number\">250</span>, <span class=\"number\">0</span>, &amp;imgBar); <span class=\"comment\">//将任务栏图片绘制到窗口底部</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ZHI_WU_COUNT; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = <span class=\"number\">338</span> + i * <span class=\"number\">65</span>; <span class=\"comment\">//计算每张卡牌的x坐标</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> y = <span class=\"number\">6</span>; <span class=\"comment\">//卡牌的y坐标固定为6</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">putimage</span>(x, y, &amp;imgCards[i]); <span class=\"comment\">//将植物卡牌绘制到任务栏上</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//putimagePNG(50 + i * 80, 10, &amp;imgCards[i]); //将植物卡牌绘制到任务栏上</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//渲染拖动窗口</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (curZhiWu &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tIMAGE* img = imgZhiWu[curZhiWu - <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">putimagePNG</span>(curX - img-&gt;<span class=\"built_in\">getwidth</span>()/<span class=\"number\">2</span>, curY -img-&gt;<span class=\"built_in\">getheight</span>()/<span class=\"number\">2</span>, img);</span><br><span class=\"line\">\t\t<span class=\"comment\">//putimagePNG(curX , curY , img);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (map[i][j].type &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = <span class=\"number\">256</span> + j * <span class=\"number\">81</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> y = <span class=\"number\">179</span> + i * <span class=\"number\">102</span><span class=\"number\">+10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> zhiwutype = map[i][j].type<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = map[i][j].frameIndex;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//putimagePNG(curX , curY , img);</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (imgZhiWu[zhiwutype][index] != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">putimagePNG</span>(x, y, imgZhiWu[zhiwutype][index]);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//刷新图形窗口</span></span><br><span class=\"line\">\t<span class=\"comment\">//FlushBatchDraw(); //刷新图形窗口，显示所有绘制的内容</span></span><br><span class=\"line\">\t<span class=\"built_in\">EndBatchDraw</span>(); <span class=\"comment\">//结束批量绘图，显示所有绘制的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户的点击事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">userClick</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tExMessage msg; <span class=\"comment\">//专门用来存储图形窗口中发生的消息</span></span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> status = <span class=\"number\">0</span>; <span class=\"comment\">//用来表示当前的状态，0表示没有点击任何卡牌，1表示点击了某张卡牌</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//peekmessage(); //处理鼠标消息</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">peekmessage</span>(&amp;msg))&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class=\"comment\">//左键按下</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(msg.x&gt; <span class=\"number\">338</span> &amp;&amp; msg.x &lt; <span class=\"number\">338</span> + <span class=\"number\">65</span> * ZHI_WU_COUNT &amp;&amp; msg.y &gt; <span class=\"number\">6</span> &amp;&amp; msg.y &lt; <span class=\"number\">96</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = (msg.x - <span class=\"number\">338</span>) / <span class=\"number\">65</span>; <span class=\"comment\">//计算用户点击的是第几张卡牌</span></span><br><span class=\"line\">\t\t\t\tstatus = <span class=\"number\">1</span>; <span class=\"comment\">//表示用户点击了某张卡牌</span></span><br><span class=\"line\">\t\t\t\tcurZhiWu = index + <span class=\"number\">1</span>; <span class=\"comment\">//记录当前选中的植物</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_MOUSEMOVE &amp;&amp; status == <span class=\"number\">1</span>) &#123; <span class=\"comment\">//鼠标移动</span></span><br><span class=\"line\">\t\t\tcurX = msg.x;</span><br><span class=\"line\">\t\t\tcurY = msg.y;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONUP) &#123; <span class=\"comment\">//鼠标左键抬起</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">256</span> &amp;&amp; msg.y &gt; <span class=\"number\">179</span> &amp;&amp; msg.y &lt; <span class=\"number\">489</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> row = (msg.y - <span class=\"number\">179</span>) / <span class=\"number\">102</span>; <span class=\"comment\">//计算用户松开鼠标时，植物应该种植在哪一行</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> col = (msg.x - <span class=\"number\">256</span>) / <span class=\"number\">81</span>; <span class=\"comment\">//计算用户松开鼠标时，植物应该种植在哪一列</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (map[row][col].type == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tmap[row][col].type = curZhiWu;</span><br><span class=\"line\">\t\t\t\t\tmap[row][col].frameIndex;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//status = 0; // 重置“拖动状态”</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//curZhiWu = 0; // 重置“选中植物”（后续可改为“判断种植后再重置”</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createSunshine</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> frc = <span class=\"number\">400</span>;</span><br><span class=\"line\">\tcount++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (count &gt;= frc) &#123;</span><br><span class=\"line\">\t\tfrc = <span class=\"number\">200</span> + <span class=\"built_in\">rand</span>() % <span class=\"number\">200</span>;</span><br><span class=\"line\">\t\tcount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//从阳光球数组中找一个未使用的阳光球</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ballMax = <span class=\"built_in\">sizeof</span>(balls) / <span class=\"built_in\">sizeof</span>(balls[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; ballMax &amp;&amp; balls[i].used; i++);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i &gt;= ballMax) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tballs[i].used = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\tballs[i].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tballs[i].x = <span class=\"number\">260</span> + <span class=\"built_in\">rand</span>() % (<span class=\"number\">900</span> - <span class=\"number\">260</span>);</span><br><span class=\"line\">\t\tballs[i].y = <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\tballs[i].destY = <span class=\"number\">200</span> + (<span class=\"built_in\">rand</span>() % <span class=\"number\">4</span>) * <span class=\"number\">90</span>; <span class=\"comment\">//</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//改变游戏的状态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">updateGame</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 1. 静态变量记录上一次更新动画的时间（只初始化一次）</span></span><br><span class=\"line\">\t<span class=\"type\">static</span> DWORD lastAnimTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// 2. 当前时间（毫秒）</span></span><br><span class=\"line\">\tDWORD now = <span class=\"built_in\">GetTickCount</span>();</span><br><span class=\"line\">\t<span class=\"comment\">// 3. 动画更新间隔：100毫秒（可调整，值越大动画越慢）</span></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">int</span> ANIM_INTERVAL = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 只有当时间间隔超过100毫秒，才更新动画帧</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (now - lastAnimTime &gt;= ANIM_INTERVAL) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 更新植物的动画（原逻辑不变，只是包在时间判断里）</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (map[i][j].type &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> zhiwutype = map[i][j].type - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 修复：原代码判断的是“更新前的帧”，这里改成“更新后的帧”</span></span><br><span class=\"line\">\t\t\t\t\tmap[i][j].frameIndex++;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 检查下一帧是否存在，不存在则重置为0</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (imgZhiWu[zhiwutype][map[i][j].frameIndex] == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tmap[i][j].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 4. 更新“上一次动画时间”，为下次判断做准备</span></span><br><span class=\"line\">\t\tlastAnimTime = now;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">createSunshine</span>();<span class=\"comment\">//创建阳光iu</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">startUI</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tIMAGE imgBg,imgMenu1, imgMenu2;</span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgBg, _T(<span class=\"string\">&quot;res/menu.png&quot;</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgMenu1, _T(<span class=\"string\">&quot;res/menu1.png&quot;</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgMenu2, _T(<span class=\"string\">&quot;res/menu2.png&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">BeginBatchDraw</span>(); <span class=\"comment\">//开始批量绘图，防止闪烁(双缓冲</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">putimage</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;imgBg); <span class=\"comment\">//将背景图片绘制到窗口的(0,0)位置</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">putimagePNG</span>(<span class=\"number\">474</span>, <span class=\"number\">75</span>, flag ? &amp;imgMenu2 : &amp;imgMenu1);</span><br><span class=\"line\">\t\t<span class=\"built_in\">EndBatchDraw</span>(); <span class=\"comment\">//结束批量绘图，显示所有绘制的内容 </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tExMessage msg; <span class=\"comment\">//专门用来存储图形窗口中发生的消息</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">peekmessage</span>(&amp;msg))&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.message == WM_MOUSEMOVE) &#123; <span class=\"comment\">//鼠标移动</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">474</span> &amp;&amp; msg.x &lt; <span class=\"number\">474</span> + <span class=\"number\">300</span> &amp;&amp; msg.y &gt; <span class=\"number\">75</span> &amp;&amp; msg.y &lt; <span class=\"number\">75</span> + <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tflag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class=\"comment\">//左键按下</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">474</span> &amp;&amp; msg.x &lt; <span class=\"number\">474</span> + <span class=\"number\">300</span> &amp;&amp; msg.y &gt; <span class=\"number\">75</span> &amp;&amp; msg.y &lt; <span class=\"number\">75</span> + <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">gameInit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">startUI</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> timer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">userClick</span>();</span><br><span class=\"line\">\t\ttimer += <span class=\"built_in\">getDelay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">updateGame</span>();</span><br><span class=\"line\">\t\t<span class=\"built_in\">updateWindow</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 新增：用定时器控制帧率（16毫秒≈60FPS，不阻塞输入）</span></span><br><span class=\"line\">\t\t<span class=\"type\">static</span> DWORD lastFrameTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tDWORD now = <span class=\"built_in\">GetTickCount</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (now - lastFrameTime &lt; <span class=\"number\">16</span>) &#123;  <span class=\"comment\">// 确保每帧至少间隔16毫秒</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Sleep</span>(now - lastFrameTime);  <span class=\"comment\">// 只在“帧太快”时轻微延时，不阻塞输入</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tlastFrameTime = now;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>); <span class=\"comment\">//等待用户按任意键</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1>植物大战僵尸</h1>\n<p>目前打算先用cpp实现在电脑,再移植到stm32f407(lvgl,freertos)[还在实现中]</p>\n<h2 id=\"cpp实现植物大战僵尸-1-2\">cpp实现植物大战僵尸(1.2)</h2>\n<p>目前已经实现僵尸</p>\n<h3 id=\"视频\">视频</h3>\n<p><a href=\"https://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca\">https://www.bilibili.com/video/BV1ZkpLzEEzJ/?vd_source=412f8565a7b49e67b294f55bcccff7ca</a></p>\n<h3 id=\"cpp实现思路\">cpp实现思路</h3>\n<ul>\n<li>1.图片卡牌等静止的加载:依据计算出的图片位置的坐标,利用putimage或putimagePNG函数绘制实现;</li>\n<li>2.植物生长动画图片实现:在updateGame函数中，根据时间间隔更新植物动画帧。每次更新时，植物的frameIndex递增，若超出图片序列范围则重置为 0 ;</li>\n<li>3.阳光产生:通过rand()时间随机生成,在草坪的随机位置;其次,制作一个阳光数组,循环利用,而不是频繁生成并删除;</li>\n<li>4.收集阳光:定义初始的阳光值,确定植物的else,怎么判断阳光位置:;(1.1)</li>\n<li>5.僵尸实现:类似于阳光</li>\n</ul>\n<h3 id=\"cpp代码实现-1-0\">cpp代码实现(1.0)</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _CRT_SECURE_NO_WARNINGS  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;graphics.h&gt;</span><span class=\"comment\">//引用图形库头文件</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;conio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;tools.h&quot;</span> </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIN_WIDTH 900 <span class=\"comment\">//游戏窗口宽度</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIN_HEIGHT 600 <span class=\"comment\">//游戏窗口高度</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> &#123;WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">IMAGE imgBg; <span class=\"comment\">//表示背景图片</span></span><br><span class=\"line\">IMAGE imgBar; <span class=\"comment\">//表示游戏中的任务栏</span></span><br><span class=\"line\">IMAGE imgCards[ZHI_WU_COUNT];</span><br><span class=\"line\">IMAGE* imgZhiWu[ZHI_WU_COUNT][<span class=\"number\">20</span>]; <span class=\"comment\">//表示植物图片</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> curX, curY; <span class=\"comment\">//表示当前鼠标的坐标</span></span><br><span class=\"line\"><span class=\"type\">int</span> curZhiWu = <span class=\"number\">0</span>; <span class=\"comment\">//表示当前选中的植物 0未选中,1豌豆射手,2向日葵</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">zhiwu</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> type; <span class=\"comment\">//0:没有植物;1:有植物;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//当前播放到第几帧</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">zhiwu</span> map[<span class=\"number\">3</span>][<span class=\"number\">9</span>]; <span class=\"comment\">//表示游戏中的植物</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">sunshineBall</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> x, y; <span class=\"comment\">//阳光的坐标 </span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//当前播放到第几帧</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> destY; <span class=\"comment\">//阳光掉落的目标y坐标</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> used; <span class=\"comment\">//是否被使用 0:未使用 1:已使用 </span></span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//10个阳光球(循环出现)</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">sunshineBall</span> balls[<span class=\"number\">10</span>];</span><br><span class=\"line\">IMAGE imgSunshineBall[<span class=\"number\">29</span>]; <span class=\"comment\">//阳光图片</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">fileExist</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span> </span>&#123;</span><br><span class=\"line\">\tFILE* fp = <span class=\"built_in\">fopen</span>(name, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(fp == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">fclose</span>(fp);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gameInit</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//加载游戏背景</span></span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgBg, _T(<span class=\"string\">&quot;res/bg.jpg&quot;</span>)); <span class=\"comment\">//加载背景图片</span></span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgBar, _T(<span class=\"string\">&quot;res/bar5.png&quot;</span>)); <span class=\"comment\">//加载矩形条图片</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(imgZhiWu, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(imgZhiWu)); <span class=\"comment\">//将植物图片数组清零</span></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(map, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(map)); <span class=\"comment\">//将植物地图清零</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//初始化植物卡牌</span></span><br><span class=\"line\">\t<span class=\"type\">char</span> name[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i =  <span class=\"number\">0</span>;i &lt; ZHI_WU_COUNT; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成植物卡牌的文件名</span></span><br><span class=\"line\">\t\t<span class=\"type\">wchar_t</span> wname[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t\t<span class=\"comment\">// 2. 生成窄字符路径（原逻辑不变）</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">sprintf_s</span>(name, <span class=\"built_in\">sizeof</span>(name), <span class=\"string\">&quot;res/Cards/card_%d.png&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 3. 转换窄字符到宽字符（需要包含 Windows.h）</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, name, <span class=\"number\">-1</span>, wname, <span class=\"number\">64</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 4. 传入宽字符路径</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">loadimage</span>(&amp;imgCards[i], wname);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">20</span>; j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">sprintf_s</span>(name, <span class=\"built_in\">sizeof</span>(name), <span class=\"string\">&quot;res/ZhiWu/%d/%d.png&quot;</span>, i , j<span class=\"number\">+1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, name, <span class=\"number\">-1</span>, wname, <span class=\"number\">64</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//imgZhiWu[i][j] = new IMAGE;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断文件是否存在 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">fileExist</span>(name)) &#123;</span><br><span class=\"line\">\t\t\t\timgZhiWu[i][j] = <span class=\"keyword\">new</span> IMAGE;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">loadimage</span>(imgZhiWu[i][j], wname);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\timgZhiWu[i][j] = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>; <span class=\"comment\">//文件不存在，跳出循环</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(balls, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(balls)); <span class=\"comment\">//将阳光球数组清零</span></span><br><span class=\"line\">\t<span class=\"comment\">// 修复思路：loadimage函数需要第二个参数为LPCTSTR类型（即TCHAR*），而你的代码传入的是char*类型。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 解决方法：将name（char数组）转换为wchar_t（宽字符数组），并传入。</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">29</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sprintf_s</span>(name, <span class=\"built_in\">sizeof</span>(name), <span class=\"string\">&quot;res/sunshine/%d.png&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">wchar_t</span> wname[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, name, <span class=\"number\">-1</span>, wname, <span class=\"number\">64</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">loadimage</span>(&amp;imgSunshineBall[i], wname);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//配置随机种子</span></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建游戏窗口:</span></span><br><span class=\"line\">\t<span class=\"built_in\">initgraph</span>(WIN_WIDTH, WIN_HEIGHT, <span class=\"number\">1</span>); <span class=\"comment\">//创建800*600的窗口，显示控制台，禁止关闭和最小化</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//关闭图形窗口</span></span><br><span class=\"line\">\t<span class=\"comment\">//closegraph();</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">updateWindow</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">BeginBatchDraw</span>(); <span class=\"comment\">//开始批量绘图，防止闪烁(双缓冲</span></span><br><span class=\"line\">\t<span class=\"comment\">//绘制背景图片</span></span><br><span class=\"line\">\t<span class=\"built_in\">putimage</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;imgBg); <span class=\"comment\">//将背景图片绘制到窗口的(0,0)位置</span></span><br><span class=\"line\">\t<span class=\"built_in\">putimagePNG</span>(<span class=\"number\">250</span>, <span class=\"number\">0</span>, &amp;imgBar); <span class=\"comment\">//将任务栏图片绘制到窗口底部</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ZHI_WU_COUNT; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = <span class=\"number\">338</span> + i * <span class=\"number\">65</span>; <span class=\"comment\">//计算每张卡牌的x坐标</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> y = <span class=\"number\">6</span>; <span class=\"comment\">//卡牌的y坐标固定为6</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">putimage</span>(x, y, &amp;imgCards[i]); <span class=\"comment\">//将植物卡牌绘制到任务栏上</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//putimagePNG(50 + i * 80, 10, &amp;imgCards[i]); //将植物卡牌绘制到任务栏上</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//渲染拖动窗口</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (curZhiWu &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tIMAGE* img = imgZhiWu[curZhiWu - <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">putimagePNG</span>(curX - img-&gt;<span class=\"built_in\">getwidth</span>()/<span class=\"number\">2</span>, curY -img-&gt;<span class=\"built_in\">getheight</span>()/<span class=\"number\">2</span>, img);</span><br><span class=\"line\">\t\t<span class=\"comment\">//putimagePNG(curX , curY , img);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (map[i][j].type &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = <span class=\"number\">256</span> + j * <span class=\"number\">81</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> y = <span class=\"number\">179</span> + i * <span class=\"number\">102</span><span class=\"number\">+10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> zhiwutype = map[i][j].type<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = map[i][j].frameIndex;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//putimagePNG(curX , curY , img);</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (imgZhiWu[zhiwutype][index] != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">putimagePNG</span>(x, y, imgZhiWu[zhiwutype][index]);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//刷新图形窗口</span></span><br><span class=\"line\">\t<span class=\"comment\">//FlushBatchDraw(); //刷新图形窗口，显示所有绘制的内容</span></span><br><span class=\"line\">\t<span class=\"built_in\">EndBatchDraw</span>(); <span class=\"comment\">//结束批量绘图，显示所有绘制的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户的点击事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">userClick</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tExMessage msg; <span class=\"comment\">//专门用来存储图形窗口中发生的消息</span></span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> status = <span class=\"number\">0</span>; <span class=\"comment\">//用来表示当前的状态，0表示没有点击任何卡牌，1表示点击了某张卡牌</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//peekmessage(); //处理鼠标消息</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">peekmessage</span>(&amp;msg))&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class=\"comment\">//左键按下</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(msg.x&gt; <span class=\"number\">338</span> &amp;&amp; msg.x &lt; <span class=\"number\">338</span> + <span class=\"number\">65</span> * ZHI_WU_COUNT &amp;&amp; msg.y &gt; <span class=\"number\">6</span> &amp;&amp; msg.y &lt; <span class=\"number\">96</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = (msg.x - <span class=\"number\">338</span>) / <span class=\"number\">65</span>; <span class=\"comment\">//计算用户点击的是第几张卡牌</span></span><br><span class=\"line\">\t\t\t\tstatus = <span class=\"number\">1</span>; <span class=\"comment\">//表示用户点击了某张卡牌</span></span><br><span class=\"line\">\t\t\t\tcurZhiWu = index + <span class=\"number\">1</span>; <span class=\"comment\">//记录当前选中的植物</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_MOUSEMOVE &amp;&amp; status == <span class=\"number\">1</span>) &#123; <span class=\"comment\">//鼠标移动</span></span><br><span class=\"line\">\t\t\tcurX = msg.x;</span><br><span class=\"line\">\t\t\tcurY = msg.y;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONUP) &#123; <span class=\"comment\">//鼠标左键抬起</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">256</span> &amp;&amp; msg.y &gt; <span class=\"number\">179</span> &amp;&amp; msg.y &lt; <span class=\"number\">489</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> row = (msg.y - <span class=\"number\">179</span>) / <span class=\"number\">102</span>; <span class=\"comment\">//计算用户松开鼠标时，植物应该种植在哪一行</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> col = (msg.x - <span class=\"number\">256</span>) / <span class=\"number\">81</span>; <span class=\"comment\">//计算用户松开鼠标时，植物应该种植在哪一列</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (map[row][col].type == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tmap[row][col].type = curZhiWu;</span><br><span class=\"line\">\t\t\t\t\tmap[row][col].frameIndex;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//status = 0; // 重置“拖动状态”</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//curZhiWu = 0; // 重置“选中植物”（后续可改为“判断种植后再重置”</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createSunshine</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> frc = <span class=\"number\">400</span>;</span><br><span class=\"line\">\tcount++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (count &gt;= frc) &#123;</span><br><span class=\"line\">\t\tfrc = <span class=\"number\">200</span> + <span class=\"built_in\">rand</span>() % <span class=\"number\">200</span>;</span><br><span class=\"line\">\t\tcount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//从阳光球数组中找一个未使用的阳光球</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ballMax = <span class=\"built_in\">sizeof</span>(balls) / <span class=\"built_in\">sizeof</span>(balls[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; ballMax &amp;&amp; balls[i].used; i++);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i &gt;= ballMax) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tballs[i].used = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\tballs[i].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tballs[i].x = <span class=\"number\">260</span> + <span class=\"built_in\">rand</span>() % (<span class=\"number\">900</span> - <span class=\"number\">260</span>);</span><br><span class=\"line\">\t\tballs[i].y = <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\tballs[i].destY = <span class=\"number\">200</span> + (<span class=\"built_in\">rand</span>() % <span class=\"number\">4</span>) * <span class=\"number\">90</span>; <span class=\"comment\">//</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//改变游戏的状态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">updateGame</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 1. 静态变量记录上一次更新动画的时间（只初始化一次）</span></span><br><span class=\"line\">\t<span class=\"type\">static</span> DWORD lastAnimTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// 2. 当前时间（毫秒）</span></span><br><span class=\"line\">\tDWORD now = <span class=\"built_in\">GetTickCount</span>();</span><br><span class=\"line\">\t<span class=\"comment\">// 3. 动画更新间隔：100毫秒（可调整，值越大动画越慢）</span></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">int</span> ANIM_INTERVAL = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 只有当时间间隔超过100毫秒，才更新动画帧</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (now - lastAnimTime &gt;= ANIM_INTERVAL) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 更新植物的动画（原逻辑不变，只是包在时间判断里）</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (map[i][j].type &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"type\">int</span> zhiwutype = map[i][j].type - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 修复：原代码判断的是“更新前的帧”，这里改成“更新后的帧”</span></span><br><span class=\"line\">\t\t\t\t\tmap[i][j].frameIndex++;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 检查下一帧是否存在，不存在则重置为0</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (imgZhiWu[zhiwutype][map[i][j].frameIndex] == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tmap[i][j].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 4. 更新“上一次动画时间”，为下次判断做准备</span></span><br><span class=\"line\">\t\tlastAnimTime = now;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">createSunshine</span>();<span class=\"comment\">//创建阳光iu</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">startUI</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tIMAGE imgBg,imgMenu1, imgMenu2;</span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgBg, _T(<span class=\"string\">&quot;res/menu.png&quot;</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgMenu1, _T(<span class=\"string\">&quot;res/menu1.png&quot;</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">loadimage</span>(&amp;imgMenu2, _T(<span class=\"string\">&quot;res/menu2.png&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">BeginBatchDraw</span>(); <span class=\"comment\">//开始批量绘图，防止闪烁(双缓冲</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">putimage</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;imgBg); <span class=\"comment\">//将背景图片绘制到窗口的(0,0)位置</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">putimagePNG</span>(<span class=\"number\">474</span>, <span class=\"number\">75</span>, flag ? &amp;imgMenu2 : &amp;imgMenu1);</span><br><span class=\"line\">\t\t<span class=\"built_in\">EndBatchDraw</span>(); <span class=\"comment\">//结束批量绘图，显示所有绘制的内容 </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tExMessage msg; <span class=\"comment\">//专门用来存储图形窗口中发生的消息</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">peekmessage</span>(&amp;msg))&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.message == WM_MOUSEMOVE) &#123; <span class=\"comment\">//鼠标移动</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">474</span> &amp;&amp; msg.x &lt; <span class=\"number\">474</span> + <span class=\"number\">300</span> &amp;&amp; msg.y &gt; <span class=\"number\">75</span> &amp;&amp; msg.y &lt; <span class=\"number\">75</span> + <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tflag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class=\"comment\">//左键按下</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">474</span> &amp;&amp; msg.x &lt; <span class=\"number\">474</span> + <span class=\"number\">300</span> &amp;&amp; msg.y &gt; <span class=\"number\">75</span> &amp;&amp; msg.y &lt; <span class=\"number\">75</span> + <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">gameInit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">startUI</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> timer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">userClick</span>();</span><br><span class=\"line\">\t\ttimer += <span class=\"built_in\">getDelay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">updateGame</span>();</span><br><span class=\"line\">\t\t<span class=\"built_in\">updateWindow</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 新增：用定时器控制帧率（16毫秒≈60FPS，不阻塞输入）</span></span><br><span class=\"line\">\t\t<span class=\"type\">static</span> DWORD lastFrameTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tDWORD now = <span class=\"built_in\">GetTickCount</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (now - lastFrameTime &lt; <span class=\"number\">16</span>) &#123;  <span class=\"comment\">// 确保每帧至少间隔16毫秒</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Sleep</span>(now - lastFrameTime);  <span class=\"comment\">// 只在“帧太快”时轻微延时，不阻塞输入</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tlastFrameTime = now;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>); <span class=\"comment\">//等待用户按任意键</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cmfm8mmq600017cr8gxtm1zho","tag_id":"cmfm8mmq800037cr80zht6npy","_id":"cmfm8mmqb00087cr83oyla5io"},{"post_id":"cmfm8mmq600017cr8gxtm1zho","tag_id":"cmfm8mmqa00067cr8ewvxbp5s","_id":"cmfm8mmqb00097cr85bnw5y4d"},{"post_id":"cmfm8mmq800027cr882zlbpji","tag_id":"cmfm8mmq800037cr80zht6npy","_id":"cmfm8mmqc000c7cr84ei017ki"},{"post_id":"cmfm8mmq800027cr882zlbpji","tag_id":"cmfm8mmqa00067cr8ewvxbp5s","_id":"cmfm8mmqc000d7cr89fleccgg"},{"post_id":"cmfm8mmq900047cr8e7yics1p","tag_id":"cmfm8mmqa00067cr8ewvxbp5s","_id":"cmfm8mmqc000g7cr8h8cfefiu"},{"post_id":"cmfm8mmq900047cr8e7yics1p","tag_id":"cmfm8mmqc000e7cr80k6e0orq","_id":"cmfm8mmqc000h7cr8gvvucyjs"},{"post_id":"cmfm8mmqa00057cr8fq5k2ktk","tag_id":"cmfm8mmq800037cr80zht6npy","_id":"cmfm8mmqc000k7cr85ozz6gp7"},{"post_id":"cmfm8mmqa00057cr8fq5k2ktk","tag_id":"cmfm8mmqc000f7cr835sj002x","_id":"cmfm8mmqc000l7cr86r8qgl9g"},{"post_id":"cmfm8mmqa00057cr8fq5k2ktk","tag_id":"cmfm8mmqc000i7cr8geometvk","_id":"cmfm8mmqc000m7cr8cdlie1xo"},{"post_id":"cmfm8mmqa00057cr8fq5k2ktk","tag_id":"cmfm8mmqc000j7cr8gliad3ml","_id":"cmfm8mmqd000n7cr82tgl0qkw"}],"Tag":[{"name":"嵌入式","_id":"cmfm8mmq800037cr80zht6npy"},{"name":"理论学习","_id":"cmfm8mmqa00067cr8ewvxbp5s"},{"name":"专业课","_id":"cmfm8mmqc000e7cr80k6e0orq"},{"name":"lvgl","_id":"cmfm8mmqc000f7cr835sj002x"},{"name":"freertos","_id":"cmfm8mmqc000i7cr8geometvk"},{"name":"游戏","_id":"cmfm8mmqc000j7cr8gliad3ml"}]}}